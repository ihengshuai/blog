import{_ as p,c as o,J as s,V as e,o as r,G as n}from"./chunks/framework.SV1ROkXV.js";const m=JSON.parse('{"title":"Nest使用Swagger文档","description":"在nest中使用swagger将接口可视化，搭建便于调试的restful风格的可视化接口文档","frontmatter":{"title":"Nest使用Swagger文档","description":"在nest中使用swagger将接口可视化，搭建便于调试的restful风格的可视化接口文档","keywords":"NestJS教程,Swagger,node框架,Ioc架构,spring,NestJS MVC,NestJS优势,NestJS原理,装饰器原理","logo":"https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/icon-nestjs.png"},"headers":[],"relativePath":"frontend/nestjs/swagger.md","filePath":"frontend/nestjs/swagger.md","lastUpdated":1709440279000}'),t={name:"frontend/nestjs/swagger.md"},c=e(`<h1 id="nest使用swagger文档" tabindex="-1">Nest使用Swagger文档 <a class="header-anchor" href="#nest使用swagger文档" aria-label="Permalink to &quot;Nest使用Swagger文档&quot;">​</a></h1><p><a href="https://swagger.io" target="_blank" rel="noreferrer">Swagger</a> 是一个用于设计、构建和文档化 RESTful API 的开源框架和工具集。它提供了一套规范和工具，使得开发人员可以轻松地定义、测试和文档化 API。使用swagger可以很方便的测试接口、对接口进行管理，最重要的还是接口可视化方便任何人的操作，对于后端来说swagger是最熟悉不过的。在这里nest也可以使用swagger进行接口文档的生成，本篇文档就来看看如何使用swagger</p><blockquote><p>对于前端来说用node生成api docs的场景可能很少见，这里只是扩展下nest的使用，方便自己对node框架方面的延伸扩展，总之多了解一些还是有好处的</p></blockquote><h2 id="起步" tabindex="-1">起步 <a class="header-anchor" href="#起步" aria-label="Permalink to &quot;起步&quot;">​</a></h2><p>使用swagger首先需要安装相关的工具包，nest中内置了<code>@nestjs/swagger</code>工具包可以安装，此依赖内部有过多次的升级，本篇以最新版<code>&gt;7</code>作为演示版本。可能看到本篇文档安装时的版本已经不是7了，那么本篇文章的相关使用方法可能不适用了，还请查看官方文档</p><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> yarn add @nestjs/swagger</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>安装好以后在程序入口进行简单的配置就可以使用了，以下在main文件中配置：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> NestFactory</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">@nestjs/core</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> SwaggerModule</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> DocumentBuilder</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">@nestjs/swagger</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> AppModule</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">./app.module</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> function</span><span style="color:#82AAFF;"> bootstrap</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> app</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#BABED8;"> NestFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">AppModule</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> config</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> DocumentBuilder</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> document</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> SwaggerModule</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createDocument</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> config</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 设置swagger的地址url： /api</span></span>
<span class="line"><span style="color:#BABED8;">  SwaggerModule</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setup</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">api</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> app</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> document</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  await</span><span style="color:#BABED8;"> app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3000</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">bootstrap</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h3><p>上面配置好了后就可以启动nest服务了，打开浏览器输入nest的服务地址加上swagger的url<code>http://localhost:3000/api</code>就看到默认的接口列表了（🔈：程序中要有相关的Controller）</p><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230807083157451.png" alt=""></p><h2 id="接口参数" tabindex="-1">接口参数 <a class="header-anchor" href="#接口参数" aria-label="Permalink to &quot;接口参数&quot;">​</a></h2><p>到这里基本上都可以看到我们定义的接口了，而当我们展开相关的接口时会发现没有任何参数类型，也就是没将代码中定义的相关参数表现出来，如果运行接口也没法输入对应的参数导致接口报错。如定义以下接口：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// GET: /api/mock</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 这里希望接口的query参数类型为 PaginationQueryDto</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Get</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#BABED8;">async </span><span style="color:#82AAFF;">getList</span><span style="color:#BABED8;">(@</span><span style="color:#82AAFF;">Query</span><span style="color:#BABED8;">() query: PaginationQueryDto) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> query</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// PaginationQueryDto类型</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> class</span><span style="color:#FFCB6B;"> PaginationQueryDto</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">IsNumber</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#C792EA;">  readonly</span><span style="color:#F07178;"> limit</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">IsNumber</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#C792EA;">  readonly</span><span style="color:#F07178;"> offset</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>而在swagger中是看不到任何参数信息的：</p><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230807084313428.png" alt=""></p><h3 id="默认注入" tabindex="-1">默认注入 <a class="header-anchor" href="#默认注入" aria-label="Permalink to &quot;默认注入&quot;">​</a></h3><p>那么针对没有任何参数问题就要进一步解决了，其实swagger内部会对所有的Controller的每个方法中的<code>@Query</code>、<code>@Param</code>、<code>@Body</code>相关装饰器进行收集作为参数类型model，不过对于以上的代码我们也用到了@Query，还是没有相关的参数显示。这里就需要说明一个装饰器了<code>@ApiProperty</code></p><h3 id="apiproperty" tabindex="-1">ApiProperty <a class="header-anchor" href="#apiproperty" aria-label="Permalink to &quot;ApiProperty&quot;">​</a></h3><p><code>@ApiProperty</code>装饰器用来装饰类的属性，主要来告诉swagger这个属性当前接口会用到，而接口的什么参数会用到，就看当前类类型被什么参数装饰器用到了，如：@Query等等。swagger内部会分析当前的属性属于当前接口的什么参数，所以这里不需要有额外的担心</p><p>让我们做简单的修改：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// PaginationQueryDto类型为</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> class</span><span style="color:#FFCB6B;"> PaginationQueryDto</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">ApiProperty</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">IsNumber</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#C792EA;">  readonly</span><span style="color:#F07178;"> limit</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">ApiProperty</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">IsNumber</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#C792EA;">  readonly</span><span style="color:#F07178;"> offset</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>就这样其他啥也不需要修改（请确保相关的参数装饰器用到了此类型），再看看接口文档的显示： <img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230807090725713.png" alt=""> 至此已经成功的展示出query参数</p><p><code>ApiProperty</code>还有一些其他的属性可以配置，如：枚举、字段名、是否必填等等</p><p>隐式自动注入只会对参数做处理，如果要对响应数据类型字段展示，就必须要显示定义了</p><h3 id="显式定义" tabindex="-1">显式定义 <a class="header-anchor" href="#显式定义" aria-label="Permalink to &quot;显式定义&quot;">​</a></h3><p>接口的相关参数除了可以使用隐式定义外，也可以使用相关的装饰器进行显示定义</p><ol><li>使用ApiQuery定义查询参数：</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Get</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ApiQuery</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> type</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">number</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> description</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">年龄</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> required</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> false</span><span style="color:#89DDFF;"> }</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ApiQuery</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> type</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> description</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">姓名</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> required</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;"> }</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">async </span><span style="color:#82AAFF;">getList</span><span style="color:#BABED8;">(@</span><span style="color:#82AAFF;">Query</span><span style="color:#BABED8;">() query: PaginationQueryDto) </span><span style="color:#89DDFF;">{}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230807211547868.png" alt=""></p><ol start="2"><li>使用ApiBody定义请求体的body数据：</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> class</span><span style="color:#FFCB6B;"> CreateUserDto</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">ApiProperty</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">IsString</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#C792EA;">  readonly</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">ApiProperty</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">IsOptional</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">Type</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> Number) </span><span style="color:#676E95;font-style:italic;">// 明确转换为number</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">IsNumber</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#C792EA;">  readonly</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Get</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ApiBody</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> type</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> CreateUserDto </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">async </span><span style="color:#82AAFF;">getList</span><span style="color:#BABED8;">(@</span><span style="color:#82AAFF;">Query</span><span style="color:#BABED8;">() query: PaginationQueryDto) </span><span style="color:#89DDFF;">{}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230807212152982.png" alt=""></p><ol start="3"><li>使用ApiResponse定义响应体类型：</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> class</span><span style="color:#FFCB6B;"> IResponseCodeDto</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">ApiProperty</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> description</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">HTTP状态码</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> }</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#F07178;">  code</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> HttpStatus</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> class</span><span style="color:#FFCB6B;"> IResponseResultListDto</span><span style="color:#C792EA;"> extends</span><span style="color:#FFCB6B;"> IResponseCodeDto</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">ApiProperty</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> isArray</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> type</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> CreateUserDto </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#F07178;">  items</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#82AAFF;">ApiProperty</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#F07178;">  pager</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> PaginationListDto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Get</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ApiResponse</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> type</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> IResponseResultListDto </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">async </span><span style="color:#82AAFF;">getList</span><span style="color:#BABED8;">(@</span><span style="color:#82AAFF;">Query</span><span style="color:#BABED8;">() query: PaginationQueryDto) </span><span style="color:#89DDFF;">{}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230807213543848.png" alt=""></p><h2 id="模块划分" tabindex="-1">模块划分 <a class="header-anchor" href="#模块划分" aria-label="Permalink to &quot;模块划分&quot;">​</a></h2><p>swagger默认会对所有的Controller划分到default模块中，通常我们会将不同的功能划分到不同的模块，而swagger提供<code>ApiTags</code>来给对应的Controller打上标签，这样就会将当前Controller接口划分到对应的名字</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ApiTags</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Mock</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Controller</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/api/mock</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> class</span><span style="color:#FFCB6B;"> MockController</span><span style="color:#89DDFF;"> {}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230808074519632.png" alt=""></p><p>看上去模块划分已经生效了，但是还会生成default模块，是因为有些Controller没有添加标签就会全部放到default中，可以写一个规则将没有标签的过滤掉</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> swaggerConfig </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> DocumentBuilder</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> document </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> SwaggerModule</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createDocument</span><span style="color:#BABED8;">(app</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> swaggerConfig)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 过滤掉不是以 \`/api\` 和 没有 \`@ApiTags\` 装饰的接口</span></span>
<span class="line"><span style="color:#BABED8;">document</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">paths </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">keys</span><span style="color:#BABED8;">(document</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">paths)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reduce</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">paths</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> path</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#BABED8;">\\/</span><span style="color:#C3E88D;">api</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">path</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> paths</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 只生成api开头的接口</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> pathItem</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">paths</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">path</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> filteredOperations</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">keys</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">pathItem</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reduce</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">ops</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> method</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> operation</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> pathItem</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">method</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">operation</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">tags</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#BABED8;"> operation</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">tags</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      return</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;"> ...</span><span style="color:#BABED8;">ops</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">method</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> operation</span><span style="color:#89DDFF;"> };</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> ops</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span><span style="color:#89DDFF;"> {}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">keys</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">filteredOperations</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;"> ...</span><span style="color:#BABED8;">paths</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">path</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> filteredOperations</span><span style="color:#89DDFF;"> };</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> paths</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#89DDFF;"> {}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230808074913531.png" alt=""></p><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><p>swagger还有一些其他的修饰配置，如：页面标题、描述信息等，简单看看使用</p><p>设置页面信息：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> swaggerConfig </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> DocumentBuilder</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#89DDFF;">    .</span><span style="color:#82AAFF;">setTitle</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Nest-swagger-api-docs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    .</span><span style="color:#82AAFF;">setDescription</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">在nest中使用swagger搭建接口文档</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    .</span><span style="color:#82AAFF;">setLicense</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">一段文本</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">https://www.baidu.com</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    .</span><span style="color:#82AAFF;">build</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/iShot_2023-08-08_07.54.46.png" alt=""></p><p>设置路径标识、显式模块：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> document </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> SwaggerModule</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createDocument</span><span style="color:#BABED8;">(app</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> swaggerConfig</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  include</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [MockController]</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 引入指定模块</span></span>
<span class="line"><span style="color:#82AAFF;">  operationIdFactory</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">controllerKey</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> methodKey</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> \`\${</span><span style="color:#BABED8;">controllerKey</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">___</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">methodKey</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 路径标识</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>除了以上的相关配置，你可以在官方文档中查看更多的配置信息，这里就不再讲了</p><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><p><a href="https://docs.nestjs.com/openapi/introduction" target="_blank" rel="noreferrer">https://docs.nestjs.com/openapi/introduction</a></p>`,55);function F(y,D,i,u,b,B){const a=n("Reward"),l=n("Gitalk");return r(),o("div",null,[c,s(a),s(l)])}const d=p(t,[["render",F]]);export{m as __pageData,d as default};
