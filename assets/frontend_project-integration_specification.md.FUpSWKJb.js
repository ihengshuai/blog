import{_ as e,c as p,J as s,V as o,o as t,G as n}from"./chunks/framework.SV1ROkXV.js";const g=JSON.parse('{"title":"项目集成之语法规范","description":"使用eslint、typescript来约束代码语法规范增强类型提示，从而降低一些潜在的代码问题并提升团队之间的协作效率","frontmatter":{"title":"项目集成之语法规范","description":"使用eslint、typescript来约束代码语法规范增强类型提示，从而降低一些潜在的代码问题并提升团队之间的协作效率","keywords":"语法规范,eslint,typescript,eslint使用,类型提示","logo":"https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/icon-project-integration.png"},"headers":[],"relativePath":"frontend/project-integration/specification.md","filePath":"frontend/project-integration/specification.md","lastUpdated":1709440279000}'),r={name:"frontend/project-integration/specification.md"},c=o(`<h1 id="项目集成之语法规范" tabindex="-1">项目集成之语法规范 <a class="header-anchor" href="#项目集成之语法规范" aria-label="Permalink to &quot;项目集成之语法规范&quot;">​</a></h1><p>项目语法规范在大型项目以及团队成员之间的协作中发挥着非常重要的作用，尤其是在项目需求变更或者重构时随心所欲的代码可能让团队头疼简直比推倒重写还难。因此团队统一代码规范及质量有利于团队之间的协作，更有益于项目的长远维护，那么如何做好这方面的工作呢？</p><blockquote><p>当然这里对于语法规范及质量要求只是个辅助工具，最重要的核心性能提升还是要靠每个人的开发功底</p></blockquote><h2 id="重要性" tabindex="-1">重要性 <a class="header-anchor" href="#重要性" aria-label="Permalink to &quot;重要性&quot;">​</a></h2><p>前面简单讲了下随心所欲的代码会变得难以维护，无规矩不成方圆，只有大家达成同一种编码意识，才能事半功倍。在项目开发中代码的质量及语法规范发挥着重要的作用，主要体现在以下几点：</p><ul><li><p><u>可读性和可维护性</u>：高质量的代码应具有良好的可读性，使团队成员能够轻松理解代码逻辑和意图。可维护性是指代码易于修改和扩展，减少引入错误的风险。良好的代码质量可以提高代码的可读性和可维护性，使团队能够更轻松地维护和修改代码</p></li><li><p><u>可靠性和稳定性</u>：优质的代码应具备高度的可靠性和稳定性，以减少bug和错误的发生。良好的代码质量可以通过静态类型检查、代码规范、单元测试等方式来提高代码的可靠性，并减少在项目维护过程中出现的潜在问题</p></li><li><p><u>可扩展性和重用性</u>：良好的代码质量可以提供良好的结构和设计，使代码易于扩展和重用。模块化和清晰的代码结构可以促进团队协作，使团队成员能够更轻松地理解和使用彼此的代码，从而提高开发效率和项目的可扩展性</p></li><li><p><u>团队协作和知识共享</u>：高质量的代码可以促进团队协作和知识共享。一致的代码风格、规范和最佳实践可以帮助团队成员更好地理解和协作，减少因为代码质量差异而引起的摩擦和冲突</p></li></ul><h2 id="如何做" tabindex="-1">如何做 <a class="header-anchor" href="#如何做" aria-label="Permalink to &quot;如何做&quot;">​</a></h2><p>首先需要在每个人的编码功底的基础上使用统一的编码规范，可以借助辅助工具<a href="https://eslint.org/docs/latest/use/getting-started" target="_blank" rel="noreferrer">eslint</a>帮助检查编码的规范降低错误风险。除此之外可以在项目中添加<a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">typescript</a>，众所周知js是个弱类型动态语言，对于相关变量的类型要求没有约束，如下面代码：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 数字与字符串的转换问题</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> total </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">total </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">total </span><span style="color:#89DDFF;">+=</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // =&gt; &quot;33&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>除了上面的问题外还有很多常见的问题如：变量提升、作用域问题等等，因此使用纯原生js很有可能造成相关问题，那么通过eslint结合ts就可以完美的解决这些问题。使用ts可以加强类型提示，使得js如其他语言Java一样可以对类型进行限制，从而降低代码错误风险</p><h2 id="eslint" tabindex="-1">ESLint <a class="header-anchor" href="#eslint" aria-label="Permalink to &quot;ESLint&quot;">​</a></h2><p><a href="https://eslint.org/docs/latest/use/getting-started" target="_blank" rel="noreferrer">eslint</a>是一个JavaScript/TypeScript的静态代码分析工具，用于检测和报告代码中的潜在问题和编码规范的违规。它可以帮助检查修复运行时漏洞、最佳规范实践、代码风格等问题，但推荐仅作为漏洞、语法规范的检查器。对于协同编码规范eslint是必不可少的工具，总之没有typescript也不能没有eslint</p><blockquote><p>ESLint原理是基于静态代码分析，通过解析代码构建抽象语法树，然后应用配置的规则来对代码进行检查和分析</p></blockquote><h3 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h3><p>eslint支持多种形式的配置文件，你可以创建<code>.eslintrc.js</code>、<code>.eslintrc.json</code>、<code>.eslintrc.yml</code>或在<code>package.json</code>中配置eslint，下面以<code>.eslintrc.js</code>形式配置：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  root</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  env</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {},</span><span style="color:#676E95;font-style:italic;"> // 环境</span></span>
<span class="line"><span style="color:#F07178;">  globals</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {},</span><span style="color:#676E95;font-style:italic;"> // 全局变量</span></span>
<span class="line"><span style="color:#F07178;">  extends</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> []</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 扩展</span></span>
<span class="line"><span style="color:#F07178;">  plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> []</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 插件</span></span>
<span class="line"><span style="color:#F07178;">  parser</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 解析器</span></span>
<span class="line"><span style="color:#F07178;">  parserOptions</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {},</span><span style="color:#676E95;font-style:italic;"> // 解析器选项</span></span>
<span class="line"><span style="color:#F07178;">  rules</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {},</span><span style="color:#676E95;font-style:italic;"> // 具体规则</span></span>
<span class="line"><span style="color:#F07178;">  overrides</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> files</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> []</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> rules</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {}</span><span style="color:#89DDFF;"> },</span><span style="color:#676E95;font-style:italic;"> // 覆盖特定规则</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>eslint配置总体来说包含env、globals、extends、plugins、parser、parserOptions、rules、overrides等几个模块的配置，了解每个模块的作用对理解整体eslint的配置非常重要</p><p>创建eslint忽略的检查文件，可以在配置文件中添加<code>ignorePatterns</code>字段配置，或者创建一个单独的配置文件<code>.eslintignore</code>(推荐)：</p><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span>node_modules</span></span>
<span class="line"><span>.eslint*</span></span>
<span class="line"><span>// etc..</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="environments、globals" tabindex="-1">environments、globals <a class="header-anchor" href="#environments、globals" aria-label="Permalink to &quot;environments、globals&quot;">​</a></h3><p>environments、globals都是用来设置设置当前代码的语言环境和全局变量的，通过二者配置可以轻松使用环境中的语法和变量以及自定义全局变量</p><p><a href="https://eslint.org/docs/latest/use/configure/language-options#specifying-environments" target="_blank" rel="noreferrer">environments</a> 设置代码的语言环境，可以设置一个或多个，支持的语言选择项有：browser、node、commonjs、es6等等，简单配置：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  env</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">    browser</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    node</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    es6</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 代码中可以使用browser、node、es6的语法及变量</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// window.innerWidth</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// process.env</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Promise</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><a href="https://eslint.org/docs/latest/use/configure/language-options#specifying-globals" target="_blank" rel="noreferrer">globals</a> 用来配置自定义的全局变量，告诉eslint会存在的全局变量有哪些，这样对于没有定义的全局变量就不会报错了：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  globals</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  	__is_Dev__</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">realonly</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  	version</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">writable</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 定义了 __is_Dev__、version 两个全局变量，前者只读、后者可以修改</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> (__is_Dev__) console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(version)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">version </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">change version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="parser、parseroptions" tabindex="-1">parser、parserOptions <a class="header-anchor" href="#parser、parseroptions" aria-label="Permalink to &quot;parser、parserOptions&quot;">​</a></h3><p><a href="https://eslint.org/docs/latest/use/configure/parser#configure-a-custom-parser" target="_blank" rel="noreferrer">parser</a>用于指定 ESLint 使用的解析器。解析器负责将代码转换成抽象语法树AST，以便 ESLint 可以对代码进行静态分析。默认情况eslint使用<a href="https://github.com/eslint/espree" target="_blank" rel="noreferrer">espree</a>作为解析器，除此之外常用的解析器有以下几种：</p><ul><li><a href="https://github.com/jquery/esprima" target="_blank" rel="noreferrer">Esprima</a>：基于 JavaScript 的 ECMAScript 5.1 标准实现的解析器，很适合纯粹的 JavaScript 项目</li><li><a href="https://github.com/babel/babel" target="_blank" rel="noreferrer">@babel/eslint-parser</a>：使 Babel 解析器与 ESLint 兼容的的包装器</li><li><a href="https://github.com/typescript-eslint/typescript-eslint" target="_blank" rel="noreferrer">@typescript-eslint/parser</a>：将 TypeScript 转换为与 ESTree 兼容的形式的解析器，通常在ts项目中使用其作为解析器</li></ul><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  parser</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@typescript-eslint/parser</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><a href="https://eslint.org/docs/latest/use/configure/language-options#specifying-parser-options" target="_blank" rel="noreferrer">parserOptions</a>用于提供解析器的选项和配置信息，比如支持的js版本、jsx支持等等，为解析器服务</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  parserOptions</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  	&quot;</span><span style="color:#F07178;">ecmaVersion</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">latest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // js版本</span></span>
<span class="line"><span style="color:#89DDFF;">  	&quot;</span><span style="color:#F07178;">sourceType</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 代码形式 module | script</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  	// &quot;allowReserved&quot;: true, // 允许使用保留字</span></span>
<span class="line"><span style="color:#89DDFF;">  	&quot;</span><span style="color:#F07178;">ecmaFeatures</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#676E95;font-style:italic;"> // 特性</span></span>
<span class="line"><span style="color:#89DDFF;">  		&quot;</span><span style="color:#F07178;">jsx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  		&quot;</span><span style="color:#F07178;">globalReturn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 全局return</span></span>
<span class="line"><span style="color:#89DDFF;">  		&quot;</span><span style="color:#F07178;">impliedStrict</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#676E95;font-style:italic;"> // 严格模式</span></span>
<span class="line"><span style="color:#89DDFF;">  	}</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>这块应该比较好理解的，大家根据自己的需求选择即可</p><h3 id="rules、overrides" tabindex="-1">rules、overrides <a class="header-anchor" href="#rules、overrides" aria-label="Permalink to &quot;rules、overrides&quot;">​</a></h3><p>以上的属性如不作特殊定制可以不进行配置，<a href="https://eslint.org/docs/latest/use/configure/rules" target="_blank" rel="noreferrer">rules</a>是eslint的核心模块，用来配置代码校验的一套规则。eslint中<a href="https://eslint.org/docs/latest/rules/" target="_blank" rel="noreferrer">内置了很多规则</a>，可以根据自己需求进行配置，规则还可以包含针对该规则的额外配置选项</p><p><strong>规则值</strong></p><ul><li>&quot;off&quot; 或 0 - 关闭规则</li><li>&quot;warn&quot; 或 1 - 启用并视作警告（不影响退出）。</li><li>&quot;error&quot; 或 2 - 启用并视作错误（触发时退出代码为 1）</li></ul><p>除此之外还可以针对单个规则添加额外的配置</p><p><strong>示例</strong></p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  rules</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  	&#39;</span><span style="color:#F07178;">no-console</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">warn</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // console警告</span></span>
<span class="line"><span style="color:#89DDFF;">  	&quot;</span><span style="color:#F07178;">no-tabs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 关闭tabs 规则</span></span>
<span class="line"><span style="color:#89DDFF;">  	&quot;</span><span style="color:#F07178;">max-len</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#F07178;">code</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 80</span><span style="color:#89DDFF;"> }</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 每行最大长度，超过80报错</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>上面展示了如何使用 &#39;字符&#39; 和 &#39;数值&#39; 作为值，并对 &#39;max-len&#39; 单个规则设置了选项</p></blockquote><div class="tip custom-block"><p class="custom-block-title">优先级</p><p>规则优先级 extends &lt; rules &lt; overrides &lt; comments</p></div><p><strong>overrides</strong></p><p>知道了rules那么什么是<a href="https://eslint.org/docs/latest/use/configure/configuration-files#how-do-overrides-work" target="_blank" rel="noreferrer">overrides</a>呢？rules是对设置的指定目标进行代码检查，如果对于特殊的目标文件不想使用rules的规则，那么就可以使用overrides进行规则覆盖</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#F07178;">quotes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">double</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#F07178;">overrides</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">    {</span></span>
<span class="line"><span style="color:#89DDFF;">      &quot;</span><span style="color:#F07178;">files</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bin/*.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">lib/*.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      &quot;</span><span style="color:#F07178;">excludedFiles</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">*.test.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      &quot;</span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#F07178;">quotes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">single</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#BABED8;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>上面列子展示了在bin、lib下除了*.test.js外只能使用单引号，覆盖掉全局的双引号规则</p><h3 id="plugins、extends" tabindex="-1">plugins、extends <a class="header-anchor" href="#plugins、extends" aria-label="Permalink to &quot;plugins、extends&quot;">​</a></h3><p>前面知道eslint内置了很多规则和默认解析解析器，那么<a href="https://eslint.org/docs/head/use/configure/plugins" target="_blank" rel="noreferrer">plugins</a>就是来扩展除内置以外的其他规则，说白了就是让eslint有解析其他自定义规则的能力。注意引入plugin并不是引入了当前plugin中所有的规则，他只是扩展了eslint解析当前plugin中规则的能力，至于具体的规则还需要在rules中配置</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">react</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 引入第三方插件，eslint-plugin-react简写</span></span>
<span class="line"><span style="color:#F07178;">  rules</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  	&quot;</span><span style="color:#F07178;">react/jsx-boolean-value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#676E95;font-style:italic;"> // 配置插件中的规则</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>注意使用第三方插件需要先安装：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> npm install eslint-plugin-react -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>插件名通常包含两种形式：</p><ul><li>非group类：如eslint-plugin-react</li><li>group类：@react/eslint-plugin-react</li></ul><div class="tip custom-block"><p class="custom-block-title">提示</p><p>使用插件时可以省略掉插件名的前的<code>eslint-plugin-</code>，如：eslint-plugin-react可以写成react，@react/eslint-plugin-react可以写成@react/react</p></div><p>对于插件的规则配置也是基于插件名的两种形式：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// eslint-plugin-react =&gt; react/no-console</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// @react/eslint-plugin-react =&gt; @react/react/no-console</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">react</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@react/react</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  rules</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  	&quot;</span><span style="color:#F07178;">react/no-console</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  	&quot;</span><span style="color:#F07178;">@react/react/no-console</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>从plugin的使用中可以看到步骤繁琐，需要对plugin中规则一一写出很麻烦，因此引入了<a href="https://eslint.org/docs/head/use/configure/configuration-files#extending-configuration-files" target="_blank" rel="noreferrer">extends</a>的概念，用来继承某些规则，如使用了plugin时，可以在extends中写入plugin的推荐配置，命名规则：<code>plugin:包名/规则</code></p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">react</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  extends</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">eslint:recommended</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 继承官方推荐的</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">plugin:react/recommended</span><span style="color:#89DDFF;">&quot;</span><span style="color:#676E95;font-style:italic;"> // 继承react插件中推荐的规则集</span></span>
<span class="line"><span style="color:#BABED8;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>除了可以扩展第三方插件的规则集，还可以使用本地的规则</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  extends</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./somepath/.eslintrc-jsx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>对于这些工具，一般推荐使用官方维护的eslint插件和配置，然后在其基础上进行定制，这样可以减少繁琐的配置，避免浪费时间</p><h3 id="编辑器集成" tabindex="-1">编辑器集成 <a class="header-anchor" href="#编辑器集成" aria-label="Permalink to &quot;编辑器集成&quot;">​</a></h3><p>这里使用vscode进行eslint的集成，首先下载eslint插件 <img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/1687834961147.jpg" alt=""></p><p>在vscode配置中加入以下配置(或者在设置面板中搜索eslint进行选择配置)：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">editor.codeActionsOnSave</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">source.fixAll.eslint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // &quot;source.fixAll&quot;: true</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">eslint.codeActionsOnSave.mode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">problems</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>以上配置好了后重新vscode</p><h3 id="规则集" tabindex="-1">规则集 <a class="header-anchor" href="#规则集" aria-label="Permalink to &quot;规则集&quot;">​</a></h3><ul><li><a href="https://github.com/airbnb/javascript" target="_blank" rel="noreferrer">Airbnb JavaScript Style Guide</a></li><li><a href="https://angular.io/guide/styleguide" target="_blank" rel="noreferrer">Angular 编码风格指南</a></li><li><a href="https://eslint.vuejs.org/" target="_blank" rel="noreferrer">eslint plugin vue</a></li><li><a href="https://github.com/jsx-eslint/eslint-plugin-react" target="_blank" rel="noreferrer">eslint plugin react</a></li><li><a href="https://es6.ruanyifeng.com/#docs/style" target="_blank" rel="noreferrer">es6 编程风格</a></li></ul><h2 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;TypeScript&quot;">​</a></h2><p>eslint虽然可以帮助降低代码出错的风险，但仍无法更直接表达相关的类型约束，js是个弱类型语言没有相关的类型约束，对于约束性不强的开发者来说仍是个头疼的问题，久而久之可能就会变得难以维护</p><p>使用<a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">typescript</a>可以增强类型提示提高开发效率降低协作成本，也方便后续的维护。关于typescript的使用可以查看我有关<a href="/frontend/ts/base.html">typescript的文章</a></p>`,70);function i(F,D,y,u,b,d){const a=n("Reward"),l=n("Gitalk");return t(),p("div",null,[c,s(a),s(l)])}const h=e(r,[["render",i]]);export{g as __pageData,h as default};
