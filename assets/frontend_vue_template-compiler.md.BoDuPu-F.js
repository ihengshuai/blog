import{_ as s,c as n,o as a,V as l}from"./chunks/framework.SV1ROkXV.js";const B=JSON.parse('{"title":"Vue源码分析之模板编译","description":"Vue源码分析之模板编译","frontmatter":{"title":"Vue源码分析之模板编译","description":"Vue源码分析之模板编译","keywords":"vue模板编译","logo":"https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/icon-vue.png"},"headers":[],"relativePath":"frontend/vue/template-compiler.md","filePath":"frontend/vue/template-compiler.md","lastUpdated":1709440279000}'),p={name:"frontend/vue/template-compiler.md"},e=l(`<h1 id="vue源码分析之模板编译" tabindex="-1">Vue源码分析之模板编译 <a class="header-anchor" href="#vue源码分析之模板编译" aria-label="Permalink to &quot;Vue源码分析之模板编译&quot;">​</a></h1><p>写作中...</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> const</span><span style="color:#BABED8;"> createCompiler </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> createCompilerCreator</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> baseCompile</span><span style="color:#89DDFF;"> (</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">  template</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">  options</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> CompilerOptions</span></span>
<span class="line"><span style="color:#89DDFF;">):</span><span style="color:#FFCB6B;"> CompiledResult</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> ast</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> parse</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">template</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trim</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> options</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">optimize</span><span style="color:#89DDFF;"> !==</span><span style="color:#FF9CAC;"> false</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#82AAFF;">    optimize</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">ast</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> options</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> code</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> generate</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">ast</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> options</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    ast</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    render</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> code</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">render</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    staticRenderFns</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> code</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">staticRenderFns</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,3),o=[e];function t(r,c,i,F,y,D){return a(),n("div",null,o)}const u=s(p,[["render",t]]);export{B as __pageData,u as default};
