import{_ as p,c as e,J as s,V as o,o as t,G as n}from"./chunks/framework.SV1ROkXV.js";const B=JSON.parse('{"title":"前端自动化测试","description":"前端自动化测试在提高代码质量、减少错误、提高团队协作和加速交付流程方面发挥着重要作用。它是现代软件开发中不可或缺的一部分，可以帮助开发团队构建可靠、高质量的应用程序，本文来看看Jest和Cypress的使用","frontmatter":{"title":"前端自动化测试","description":"前端自动化测试在提高代码质量、减少错误、提高团队协作和加速交付流程方面发挥着重要作用。它是现代软件开发中不可或缺的一部分，可以帮助开发团队构建可靠、高质量的应用程序，本文来看看Jest和Cypress的使用","keywords":"测试,jest,单元测试,端到端测试,unit test,end-to-end test,自动化测试,组件测试,vue测试","logo":"https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/icon-project-integration.png"},"headers":[],"relativePath":"frontend/project-integration/test-framework.md","filePath":"frontend/project-integration/test-framework.md","lastUpdated":1709440279000}'),r={name:"frontend/project-integration/test-framework.md"},c=o(`<h1 id="前端自动化测试" tabindex="-1">前端自动化测试 <a class="header-anchor" href="#前端自动化测试" aria-label="Permalink to &quot;前端自动化测试&quot;">​</a></h1><p>前端自动化测试在提高代码质量、减少错误、提高团队协作和加速交付流程方面发挥着重要作用。它是现代软件开发中不可或缺的一部分，可以帮助开发团队构建可靠、高质量的应用程序</p><p>单元测试（Unit Testing）和端到端测试（End-to-End Testing）是两种常见的测试方法，它们在测试的范围、目的和执行方式上有所不同。单元测试和端到端测试不是相互排斥的，而是互补的。它们在不同的层面和阶段提供了不同的价值，共同构成了一个全面的测试策略</p><h2 id="单测和端测区别" tabindex="-1">单测和端测区别 <a class="header-anchor" href="#单测和端测区别" aria-label="Permalink to &quot;单测和端测区别&quot;">​</a></h2><h3 id="单元测试-unit" tabindex="-1">单元测试(Unit) <a class="header-anchor" href="#单元测试-unit" aria-label="Permalink to &quot;单元测试(Unit)&quot;">​</a></h3><ul><li>单元测试关注于最小的可测试单元，如函数、方法或模块</li><li>目的是验证代码中的每个独立单元（如函数）是否按照预期工作</li><li>通常是自动化的、快速执行的，且不依赖于外部资源或其他模块</li><li>验证单个代码单元的行为，提供快速反馈，并帮助捕获和修复问题</li></ul><h3 id="端到端测试-end-to-end" tabindex="-1">端到端测试(End-to-End) <a class="header-anchor" href="#端到端测试-end-to-end" aria-label="Permalink to &quot;端到端测试(End-to-End)&quot;">​</a></h3><ul><li>从用户角度出发，测试整个应用程序的功能和流程</li><li>模拟真实的用户交互和场景，从应用程序的外部进行测试。跨多个模块、组件和服务进行，以确保整个应用程序的各个部分正常协同工作</li><li>涉及用户界面（UI）交互、网络请求、数据库操作等，以验证整个应用程序的功能和可用性</li></ul><p>总之，单元测试主要关注代码内部的正确性，而端到端测试关注整体功能和用户体验。结合使用这两种测试方法可以提高软件的质量和可靠性。在项目中尤其是公共依赖如组件库至少都需要单测，端测相对来说比较繁琐点，但是也是程序稳定的重要验证渠道</p><h2 id="单元测试-jest" tabindex="-1">单元测试 - Jest <a class="header-anchor" href="#单元测试-jest" aria-label="Permalink to &quot;单元测试 - Jest&quot;">​</a></h2><p>这里使用Jest作为单元测试工具，<a href="https://jestjs.io/zh-Hans/docs/getting-started" target="_blank" rel="noreferrer">Jest</a> 是一个用于 JavaScript 应用程序的开源测试框架。它是由 Facebook 开发和维护的，通常用于单元测试。Jest 具有简单易用的 API、丰富的功能和强大的断言库，广泛应用于前端开发和 Node.js 环境中</p><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> npm install jest -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;">​</a></h3><p>使用npx进行交互式生成默认的配置文件，它会提示你每步的选择：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> npx jest --init</span></span>
<span class="line"><span style="color:#FFCB6B;">The</span><span style="color:#C3E88D;"> following questions will help Jest to create a suitable configuration for your project</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">✔</span><span style="color:#C3E88D;"> Would you like to use Jest when running </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> script in </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">package.json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">? … yes</span></span>
<span class="line"><span style="color:#FFCB6B;">✔</span><span style="color:#C3E88D;"> Would you like to use Typescript for the configuration file? … no</span></span>
<span class="line"><span style="color:#FFCB6B;">✔</span><span style="color:#C3E88D;"> Choose the test environment that will be used for testing › jsdom </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">browser-like</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">✔</span><span style="color:#C3E88D;"> Do you want Jest to add coverage reports? … yes</span></span>
<span class="line"><span style="color:#FFCB6B;">✔</span><span style="color:#C3E88D;"> Which provider should be used to instrument code for coverage? › v8</span></span>
<span class="line"><span style="color:#FFCB6B;">✔</span><span style="color:#C3E88D;"> Automatically clear mock calls, instances, contexts and results before every test? … yes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">✏️</span><span style="color:#C3E88D;">  Modified test/package.json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">📝</span><span style="color:#C3E88D;">  Configuration file created at test/jest.config.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>默认配置文件大概是下面的内容：配置中有很多注释提供我们参考，对于默认的配置就不用删除多语的注释了，方便参考。通常都是对需要的配置项做修改即可</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> config </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // All imported modules in your tests should be mocked automatically</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // automock: false,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // Automatically clear mock calls, instances, contexts and results before every test</span></span>
<span class="line"><span style="color:#F07178;">  clearMocks</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // Indicates whether the coverage information should be collected while executing the test</span></span>
<span class="line"><span style="color:#F07178;">  collectCoverage</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // An array of glob patterns indicating a set of files for which coverage information should be collected</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // collectCoverageFrom: undefined,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // The directory where Jest should output its coverage files</span></span>
<span class="line"><span style="color:#F07178;">  coverageDirectory</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">coverage</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // An array of regexp pattern strings used to skip coverage collection</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // coveragePathIgnorePatterns: [</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  //   &quot;/node_modules/&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // ],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // Indicates which provider should be used to instrument code for coverage</span></span>
<span class="line"><span style="color:#F07178;">  coverageProvider</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">v8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // Make calling deprecated APIs throw helpful error messages</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // errorOnDeprecated: false,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // A list of paths to directories that Jest should use to search for files in</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // roots: [</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  //   &quot;&lt;rootDir&gt;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // ],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // The test environment that will be used for testing</span></span>
<span class="line"><span style="color:#F07178;">  testEnvironment</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">jsdom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 省略其他...</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> config</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p>常用的配置：</p><ul><li><p>collectCoverage：boolean值，用来生成覆盖率报告，通常也可以使用命令行<code>--coverage</code>参数生成</p></li><li><p>moduleFileExtensions：对于引入文件可以省去文件后缀，jest会根据规则一一匹配</p></li><li><p>moduleNameMapper：模块匹配规则，告诉jest改模块的匹配路径</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  moduleNameMapper</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 当匹配到 .css 等结尾的文件时对应 /__mocks__/style-mock.ts 文件</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#BABED8;">\\\\</span><span style="color:#FFCB6B;">.(css|less|scss|sass)$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">&lt;rootDir&gt;/__mocks__/style-mock.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 当匹配 @ui 开头的的对应到 src 文件夹</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">@ui/(.*)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">&lt;rootDir&gt;/src/$1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>setupFiles：在测试环境准备后和安装jest框架前做一些配置，常用来添加一些全局环境模拟数据</p></li><li><p>setupFilesAfterEnv：在安装jest框架后对jest做一些扩展，相比setupFiles更加通用</p></li><li><p>testEnvironment：jest模拟的环境，可以选择node、jsdom来模拟node和浏览器环境</p></li><li><p>testMatch：指定要测试哪些文件</p></li><li><p>transform：使用一些插件对代码进行转义以便jest可以理解，如设置tsx转义</p></li></ul><p>以上是最基本的配置，jest的配置还是很多的，还要官方有列举了一个表可以<a href="https://jestjs.io/docs/configuration" target="_blank" rel="noreferrer">随时翻阅不用死记</a></p><h3 id="转译器" tabindex="-1">转译器 <a class="header-anchor" href="#转译器" aria-label="Permalink to &quot;转译器&quot;">​</a></h3><p>Jest中有转义器的概念来帮助它理解编写的代码，可以比做babel对代码做一些转换来兼容浏览器，差不多一样的道理</p><ol><li><p>模块引用转换</p><p>在单个测试文件中都会引入我们编写的代码，然后对此代码的功能进行测试，而前端通常都是以esmodule的形式进行函数的导出，jest默认使用的是commonjs，对于module语法jest不认识就会报错</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> sum</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">../core</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 报错</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">describe</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第一个测试</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>那么可以对jest添加转义器将esmodule模块的代码转换成commonjs就可以了。打开配置文件：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jest.config.js</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  transform</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">^.+</span><span style="color:#BABED8;">\\\\</span><span style="color:#FFCB6B;">.(ts|tsx|js|jsx)$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">      &quot;</span><span style="color:#C3E88D;">babel-jest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      {</span></span>
<span class="line"><span style="color:#BABED8;">        presets</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@babel/preset-env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> targets</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> node</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">current</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> }]]</span></span>
<span class="line"><span style="color:#89DDFF;">      },</span></span>
<span class="line"><span style="color:#89DDFF;">    ],</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>上面使用了 <code>babel-jest</code>和 <code>@babel/preset-env</code>的依赖包需要安装下：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> npm i babel-jest @babel/preset-env -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样就可以解决esmodule语法不识别的问题</p></li><li><p>转换typescript：目前项目中的文件都是以ts编写的，而默认情况下jest只识别js文件的，那么就需要对ts进行转译让jest识别</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jest.config.js</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  transform</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">^.+</span><span style="color:#BABED8;">\\\\</span><span style="color:#FFCB6B;">.(ts|tsx|js|jsx)$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">      &quot;</span><span style="color:#C3E88D;">babel-jest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      {</span></span>
<span class="line"><span style="color:#BABED8;">        presets</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#676E95;font-style:italic;">/* 其它... */</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@babel/preset-typescript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]]</span></span>
<span class="line"><span style="color:#89DDFF;">      },</span></span>
<span class="line"><span style="color:#89DDFF;">    ],</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>需要安装对应的<code>@babel/preset-typescript</code>；除了使用ts转义器也可以使用<code>ts-jest</code>直接运行ts代码</p><p>得益于ts的转译插件可以让jest的测试文件（或配置文件）都写成ts类型的，而在ts文件中对于不识别的jest工具会报错或者没有提示，安装jest的类型文件包<code>@types/jest</code>来告诉ts对应的jest类型，然后进行配置：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// tsconfig.json</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">types</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>转换jsx：假如项目中使用了jsx那么也要对jsx进行转义，这里以vue jsx为例</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jest.config.ts</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  transform</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">^.+</span><span style="color:#BABED8;">\\\\</span><span style="color:#FFCB6B;">.(ts|tsx|js|jsx)$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">      &quot;</span><span style="color:#C3E88D;">babel-jest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // 省略其他</span></span>
<span class="line"><span style="color:#BABED8;">        plugins</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vue/babel-plugin-jsx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#89DDFF;">      },</span></span>
<span class="line"><span style="color:#89DDFF;">    ],</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li></ol><h3 id="基本断言" tabindex="-1">基本断言 <a class="header-anchor" href="#基本断言" aria-label="Permalink to &quot;基本断言&quot;">​</a></h3><p>基本环境配置好后，就到了测试的时间了，我们先来最简单的配置用起</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// __tests__/demo.spec.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> sum</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">src/utils</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">describe</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第一个测试</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  it</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">分组1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">    expect</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">sum</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 或者不用分组</span></span>
<span class="line"><span style="color:#82AAFF;">test</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第一个测试</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  expect</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">sum</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>这里介绍下几个关键字基本概念：</p><ul><li>describe：用来描述当前测试的整体内容</li><li>it：用来分组测试</li><li>test：用来描述当前测试，无分组</li><li>expect：判断参数的值，其的返回值有多个断言方法，上面使用了<code>toBe</code>也就是等于的意思。除了次此断言有很多断言的条件，你可以<a href="https://jestjs.io/docs/expect" target="_blank" rel="noreferrer">点击这里阅读官方文档</a></li></ul><h4 id="执行测试" tabindex="-1">执行测试 <a class="header-anchor" href="#执行测试" aria-label="Permalink to &quot;执行测试&quot;">​</a></h4><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 现在package中配置 jest 脚本，然后执行测试</span></span>
<span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> npm run test # npx jest</span></span>
<span class="line"><span style="color:#FFCB6B;"> PASS</span><span style="color:#C3E88D;">  __tests__/demo.spec.ts</span></span>
<span class="line"><span style="color:#FFCB6B;">  第一个测试</span></span>
<span class="line"><span style="color:#FFCB6B;">    ✓</span><span style="color:#C3E88D;"> 分组1 </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">2</span><span style="color:#C3E88D;"> ms</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">File</span><span style="color:#89DDFF;">      |</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Stmts </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Branch </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Funcs </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Lines </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> Uncovered</span><span style="color:#C3E88D;"> Line #s </span></span>
<span class="line"><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">All</span><span style="color:#C3E88D;"> files </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">      100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#BABED8;">                   </span></span>
<span class="line"><span style="color:#FFCB6B;"> utils.ts</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">      100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#BABED8;">                   </span></span>
<span class="line"><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">Test</span><span style="color:#C3E88D;"> Suites: </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> passed, </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#FFCB6B;">Tests:</span><span style="color:#F78C6C;">       1</span><span style="color:#C3E88D;"> passed, </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#FFCB6B;">Snapshots:</span><span style="color:#F78C6C;">   0</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#FFCB6B;">Time:</span><span style="color:#F78C6C;">        0.519</span><span style="color:#C3E88D;"> s</span></span>
<span class="line"><span style="color:#FFCB6B;">Ran</span><span style="color:#C3E88D;"> all test suites.</span></span>
<span class="line"><span style="color:#FFCB6B;">✨</span><span style="color:#C3E88D;">  Done in </span><span style="color:#F78C6C;">1.02</span><span style="color:#C3E88D;">s.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>可以看到对应的测试文件、分组以及测试覆盖率</p><h3 id="路径映射" tabindex="-1">路径映射 <a class="header-anchor" href="#路径映射" aria-label="Permalink to &quot;路径映射&quot;">​</a></h3><p>上面在测试代码时会先引入对应的工具代码，如果都使用相对路径引入会显得很麻烦。在项目中通常都喜欢使用<code>@</code>这种方式引入文件，在测试环境依然可以使用，这样也可以和项目中的文件路径保持一致</p><p>配置路径映射需要满足两个条件：</p><ol><li>jest识别路径映射</li><li>ts识别路径映射（如果项目中用了ts）</li></ol><h4 id="配置jest路径映射" tabindex="-1">配置jest路径映射 <a class="header-anchor" href="#配置jest路径映射" aria-label="Permalink to &quot;配置jest路径映射&quot;">​</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jest.config.ts</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#FFCB6B;">  moduleNameMapper</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">@/(.*)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;rootDir&gt;/src/$1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="配置tsconfig" tabindex="-1">配置tsconfig <a class="header-anchor" href="#配置tsconfig" aria-label="Permalink to &quot;配置tsconfig&quot;">​</a></h4><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// tsconfig.json</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">paths</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">@/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">src/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">   }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>这样在测试文件中就可以使用路径映射降低心智负担</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// __tests__/demo.spec.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> sum</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@/utils</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>除了手动设置外还可以将tsconfig中的path直接作为路径映射，这样就减少了多处的修改。实现这一功能需要借助<code>ts-jest</code>工具包，不同这个自己也可以写个逻辑实现</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jest.config.ts</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> pathsToModuleNameMapper </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ts-jest/utils</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> compilerOptions </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./tsconfig</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#89DDFF;font-style:italic;"> default</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  moduleNameMapper</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> pathsToModuleNameMapper</span><span style="color:#BABED8;">(compilerOptions</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">paths</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">    prefix</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">&lt;rootDir&gt;/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="dom测试" tabindex="-1">dom测试 <a class="header-anchor" href="#dom测试" aria-label="Permalink to &quot;dom测试&quot;">​</a></h3><p>jest支持浏览器环境，使用浏览器环境时需要安装对应的包，请根据版本可以选择<code>jsdom</code>或<code>jest-environment-jsdom</code>包进行安装，这里jest版本为<code>28+</code>使用后者。测试文件修改如下：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// __tests__/demo.spec.ts</span></span>
<span class="line"><span style="color:#82AAFF;">describe</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第一个测试</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  it</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">分组1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 使用 localStorage API</span></span>
<span class="line"><span style="color:#BABED8;">    localStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setItem</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">    expect</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">localStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getItem</span><span style="color:#F07178;">((</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>运行测试用例：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> npm run test</span></span>
<span class="line"><span style="color:#FFCB6B;">PASS</span><span style="color:#C3E88D;">  __tests__/demo.spec.ts</span></span>
<span class="line"><span style="color:#FFCB6B;">  第一个测试</span></span>
<span class="line"><span style="color:#FFCB6B;">    ✓</span><span style="color:#C3E88D;"> 分组1 </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">2</span><span style="color:#C3E88D;"> ms</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">File</span><span style="color:#89DDFF;">      |</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Stmts </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Branch </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Funcs </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Lines </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> Uncovered</span><span style="color:#C3E88D;"> Line #s </span></span>
<span class="line"><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">All</span><span style="color:#C3E88D;"> files </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">       0</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">        0</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">       0</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">       0</span><span style="color:#89DDFF;"> |</span><span style="color:#BABED8;">                   </span></span>
<span class="line"><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">Test</span><span style="color:#C3E88D;"> Suites: </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> passed, </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#FFCB6B;">Tests:</span><span style="color:#F78C6C;">       1</span><span style="color:#C3E88D;"> passed, </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#FFCB6B;">Snapshots:</span><span style="color:#F78C6C;">   0</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#FFCB6B;">Time:</span><span style="color:#F78C6C;">        0.701</span><span style="color:#C3E88D;"> s, estimated </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> s</span></span>
<span class="line"><span style="color:#FFCB6B;">Ran</span><span style="color:#C3E88D;"> all test suites.</span></span>
<span class="line"><span style="color:#FFCB6B;">✨</span><span style="color:#C3E88D;">  Done in </span><span style="color:#F78C6C;">1.13</span><span style="color:#C3E88D;">s.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="异步测试" tabindex="-1">异步测试 <a class="header-anchor" href="#异步测试" aria-label="Permalink to &quot;异步测试&quot;">​</a></h3><p>jest可以使用多种方式进行异步代码测试，通常使用promise、async就可以了</p><ol><li>使用promise</li><li>async/await</li><li>回调</li></ol><p>这里模拟一个异步方法，通过上面的三种方式进行测试</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// src/utils</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> function</span><span style="color:#82AAFF;"> getUser</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">name</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#89DDFF;"> new</span><span style="color:#FFCB6B;"> Promise</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">    setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#82AAFF;"> resolve</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">name</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 1000</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="使用promise" tabindex="-1">使用Promise <a class="header-anchor" href="#使用promise" aria-label="Permalink to &quot;使用Promise&quot;">​</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// __tests__/demo.spec.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> getUser</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@/utils</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">describe</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">测试异步代码</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  it</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">promise调用方式测试</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> user</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">小明</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 使用then</span></span>
<span class="line"><span style="color:#82AAFF;">    getUser</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">user</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">      expect</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">user</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">  it</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">使用resolves测试promise</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> user</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">小李</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 使用 .resolves 方式，注意这里要 return</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#82AAFF;"> expect</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">getUser</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">user</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">resolves</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">user</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="使用async测试" tabindex="-1">使用async测试 <a class="header-anchor" href="#使用async测试" aria-label="Permalink to &quot;使用async测试&quot;">​</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// __tests__/demo.spec.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> getUser</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@/utils</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">describe</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">测试异步代码</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  it</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">使用async测试</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;"> async</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> user</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">小明</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> getUser</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">user</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#82AAFF;">    expect</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">user</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="使用回调函数" tabindex="-1">使用回调函数 <a class="header-anchor" href="#使用回调函数" aria-label="Permalink to &quot;使用回调函数&quot;">​</a></h4><p>回调函数默认通常是以前那种回调写法，这里需要对以上的异步函数进行调整，让其换成回调函数模式</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 接受一个cb，这里固定返回的值为true，没有错误</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> function</span><span style="color:#82AAFF;"> getUser</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">cb</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">error</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> any</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> data</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> any</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#FFCB6B;"> void</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">    cb</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">null,</span><span style="color:#FF9CAC;"> true</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span><span style="color:#F78C6C;"> 500</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 定义测试</span></span>
<span class="line"><span style="color:#82AAFF;">describe</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">测试异步代码</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  it</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">使用回调函数</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">done</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    function</span><span style="color:#82AAFF;"> cb</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">error</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> any</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> data</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> any</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#82AAFF;">        done</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      try</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">        expect</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">data</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">        done</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span><span style="color:#89DDFF;font-style:italic;"> catch</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">err</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#82AAFF;">        done</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 这里一定要使用try catch，防止出错时没有执行done</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#82AAFF;">    getUser</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">cb</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>回调模式一定要执行<code>done</code>函数，如果没有执行则会被认为超时错误</p><h3 id="模拟函数" tabindex="-1">模拟函数 <a class="header-anchor" href="#模拟函数" aria-label="Permalink to &quot;模拟函数&quot;">​</a></h3><p>假设要模拟一个工具函数的内部实现，可以使用mock函数来判断函数内部的值是否达到预期</p><p>定义个待测试的函数forEach</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> function</span><span style="color:#82AAFF;"> forEach</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">items</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> callback</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">num</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#FFCB6B;"> void</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> index</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> index</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> items</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> index</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#82AAFF;">    callback</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">items</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">index</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>添加测试用例：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// __tests__/demo.spec.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> forEach</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@/utils</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 模拟函数</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> mockFn </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> jest</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fn</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">x</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;"> 1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">test</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">模拟函数</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  forEach</span><span style="color:#F07178;">([</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 1</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> mockFn</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">  expect</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">mockFn</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">mock</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">calls</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toHaveLength</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">  expect</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">mockFn</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">mock</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">calls</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">][</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">  expect</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">mockFn</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">mock</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">calls</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">][</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">  expect</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">mockFn</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">mock</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">results</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>更多关于模拟函数的例子请<a href="https://jestjs.io/zh-Hans/docs/mock-functions" target="_blank" rel="noreferrer">查看文档</a> 和 <a href="https://jestjs.io/zh-Hans/docs/mock-function-api" target="_blank" rel="noreferrer">API</a></p><h3 id="定时器" tabindex="-1">定时器 <a class="header-anchor" href="#定时器" aria-label="Permalink to &quot;定时器&quot;">​</a></h3><p>Jest可以通过一个函数转换计时器以便允许你控制时间流量</p><p>假设测试如下定时器代码：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> function</span><span style="color:#82AAFF;"> useTimer</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">cb</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> Function</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> cb</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#82AAFF;"> cb</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 1000</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>编写测试用例：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> useTimer</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@/utils</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">jest</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">useFakeTimers</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">jest</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">spyOn</span><span style="color:#BABED8;">(global</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">setTimeout</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">test</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test timer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> cb</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> jest</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fn</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">  useTimer</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">cb</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">  expect</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">cb</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">not</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBeCalled</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 执行所有的定时器</span></span>
<span class="line"><span style="color:#BABED8;">  jest</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">runAllTimers</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">  expect</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">cb</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBeCalled</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>更多见<a href="https://jestjs.io/docs/timer-mocks" target="_blank" rel="noreferrer">官方文档</a></p><h3 id="setup配置" tabindex="-1">setup配置 <a class="header-anchor" href="#setup配置" aria-label="Permalink to &quot;setup配置&quot;">​</a></h3><p>写测试的时候你经常需要在运行测试前做一些准备工作，和在运行测试后进行一些收尾工作。 Jest 提供辅助函数来处理这个问题</p><p>这其中包括beforeEach、afterEach、beforeAll、afterAll，其中前两者在每个测试前都会执行一次，后者在文件中只会执行一次</p><h3 id="覆盖率" tabindex="-1">覆盖率 <a class="header-anchor" href="#覆盖率" aria-label="Permalink to &quot;覆盖率&quot;">​</a></h3><p>除了对程序进行断言外，jest还收集代码的测试覆盖率并生成对应的报告，包括：某个函数内部的测试覆盖率、整个文件的覆盖率，要想达到覆盖率100%，就要测试到每个文件的所有代码、每个函数内部的所有分支条件</p><h4 id="开启覆盖率" tabindex="-1">开启覆盖率 <a class="header-anchor" href="#开启覆盖率" aria-label="Permalink to &quot;开启覆盖率&quot;">​</a></h4><p>可以通过配置文件</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jest.config.ts</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 主要涉及到这两个配置</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#89DDFF;font-style:italic;"> default</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  collectCoverage</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 启用</span></span>
<span class="line"><span style="color:#F07178;">  coverageDirectory</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">coverage</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 报告生成位置</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>通过cli，执行脚本时带上参数</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> npx jest --coverage</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="测试覆盖率" tabindex="-1">测试覆盖率 <a class="header-anchor" href="#测试覆盖率" aria-label="Permalink to &quot;测试覆盖率&quot;">​</a></h4><p>假设我们有这么一个函数</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> function</span><span style="color:#82AAFF;"> whatType</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">arg</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> any</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> type</span><span style="color:#89DDFF;"> =</span><span style="color:#FFCB6B;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">toString</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">arg</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">type</span><span style="color:#89DDFF;"> ===</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">[object String]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">type</span><span style="color:#89DDFF;"> ===</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">[object Boolean]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">boolean</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>添加测试用例</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> whatType</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@/utils</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">describe</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">测试覆盖率</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  it</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">函数条件覆盖率</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">    expect</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">whatType</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">boolean</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>执行测试用例</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> npm run test</span></span>
<span class="line"><span style="color:#FFCB6B;"> PASS</span><span style="color:#C3E88D;">  __tests__/demo.spec.ts</span></span>
<span class="line"><span style="color:#FFCB6B;">  测试覆盖率</span></span>
<span class="line"><span style="color:#FFCB6B;">    ✓</span><span style="color:#C3E88D;"> 函数条件覆盖率 </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">1</span><span style="color:#C3E88D;"> ms</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">File</span><span style="color:#89DDFF;">      |</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Stmts </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Branch </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Funcs </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Lines </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> Uncovered</span><span style="color:#C3E88D;"> Line #s </span></span>
<span class="line"><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">All</span><span style="color:#C3E88D;"> files </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">   96.77</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">       50</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">   96.77</span><span style="color:#89DDFF;"> |</span><span style="color:#BABED8;">                   </span></span>
<span class="line"><span style="color:#FFCB6B;"> index.ts</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">   96.77</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">       50</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">   96.77</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> 4</span><span style="color:#BABED8;">                 </span></span>
<span class="line"><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">Test</span><span style="color:#C3E88D;"> Suites: </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> passed, </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#FFCB6B;">Tests:</span><span style="color:#F78C6C;">       1</span><span style="color:#C3E88D;"> passed, </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#FFCB6B;">Snapshots:</span><span style="color:#F78C6C;">   0</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#FFCB6B;">Time:</span><span style="color:#F78C6C;">        0.486</span><span style="color:#C3E88D;"> s, estimated </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> s</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li>File：测试的文件</li><li>Stmts：测试中被执行的代码语句的比例</li><li>Branch：测试代码条件分支比例</li><li>Funcs：测试中被执行函数比例</li><li>Lines：测试中被执行代码行数比例</li><li>Uncovered Line：没有测试到的行数</li></ul><p>除了查看终端的表格外，还可以使用更直观的报告，文件报告的结构大概如下：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">coverage</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#C3E88D;"> clover.xml # xml格式</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#C3E88D;"> coverage-final.json # json格式</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#C3E88D;"> lcov-report # html格式</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;">   ├── base.css</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;">   ├── block-navigation.js</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;">   ├── favicon.png</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;">   ├── index.html # 主页面入口</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;">   ├── index.ts.html</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;">   ├── other.ts.html</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;">   ├── prettify.css</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;">   ├── prettify.js</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;">   ├── sort-arrow-sprite.png</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;">   └── sorter.js</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#C3E88D;"> lcov.info</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>一般都来查看HTML报告，打开报告页面</p><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230817113856297.png" alt=""></p><p>可以点击对应的文件查看更详细的报告</p><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230817113942295.png" alt=""></p><h3 id="vue组件测试" tabindex="-1">Vue组件测试 <a class="header-anchor" href="#vue组件测试" aria-label="Permalink to &quot;Vue组件测试&quot;">​</a></h3><p>jest也可以对vue组件进行测试，vue官方提供了 <a href="https://v1.test-utils.vuejs.org/zh/" target="_blank" rel="noreferrer">vue2版本工具包(vue-test)</a> 和 <a href="https://test-utils.vuejs.org/guide/" target="_blank" rel="noreferrer">vue3版本工具包(@vue/test-utils)</a>，这里基于vue3组件进行测试</p><p>安装对应的依赖：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> npm install @vue/test-utils -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>对于Jestv28+以上版本还需要添加以下配置：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jest.config.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#89DDFF;font-style:italic;"> default</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  testEnvironmentOptions</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">    customExportConditions</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">node-addons</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>创建一个简单的Button组件：</p><div class="language-tsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> defineComponent</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#89DDFF;font-style:italic;"> default</span><span style="color:#82AAFF;"> defineComponent</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  render</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">按钮</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>添加测试用例：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> mount</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@vue/test-utils</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Button </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@/components/Button</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">test</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">测试vue组件</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> wrapper</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> mount</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    setup</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      return</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#F07178;"> &lt;</span><span style="color:#FFCB6B;">Button</span><span style="color:#F07178;"> /&gt;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">      };</span></span>
<span class="line"><span style="color:#89DDFF;">    },</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">  expect</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">wrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">text</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">按钮</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>运行测试</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> npm run test</span></span>
<span class="line"><span style="color:#FFCB6B;"> PASS</span><span style="color:#C3E88D;">  __tests__/demo.spec.tsx</span></span>
<span class="line"><span style="color:#FFCB6B;">  ✓</span><span style="color:#C3E88D;"> 测试vue组件 </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">9</span><span style="color:#C3E88D;"> ms</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">------------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">File</span><span style="color:#89DDFF;">        |</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Stmts </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Branch </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Funcs </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> %</span><span style="color:#C3E88D;"> Lines </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> Uncovered</span><span style="color:#C3E88D;"> Line #s </span></span>
<span class="line"><span style="color:#FFCB6B;">------------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">All</span><span style="color:#C3E88D;"> files   </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">      100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#BABED8;">                   </span></span>
<span class="line"><span style="color:#FFCB6B;"> Button.tsx</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">      100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;">     100</span><span style="color:#89DDFF;"> |</span><span style="color:#BABED8;">                   </span></span>
<span class="line"><span style="color:#FFCB6B;">------------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">----------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">---------</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">Test</span><span style="color:#C3E88D;"> Suites: </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> passed, </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#FFCB6B;">Tests:</span><span style="color:#F78C6C;">       1</span><span style="color:#C3E88D;"> passed, </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#FFCB6B;">Snapshots:</span><span style="color:#F78C6C;">   0</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#FFCB6B;">Time:</span><span style="color:#F78C6C;">        0.633</span><span style="color:#C3E88D;"> s</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>添加全局组件，当单测某个组件时，组件内部引用的其它组件会因为没有引用而报错，定义全局组件可以解决这个问题</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jest.setup.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> config</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@vue/test-utils</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Button </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@/button/src/button</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Icon </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">@/button/src/icon</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">config</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">global</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">components </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  Button</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  Icon</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>配置jest</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jest.config.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#89DDFF;font-style:italic;"> default</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  setupFiles</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;rootDir&gt;/jest.setup.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>这里不对vue工具包API过多的解释，更多的API使用可以查看<a href="https://test-utils.vuejs.org/installation/" target="_blank" rel="noreferrer">官方文档</a>，vue2版本的可以<a href="https://v1.test-utils.vuejs.org/zh/" target="_blank" rel="noreferrer">查看这里</a></p><h2 id="端到端测试-cypress" tabindex="-1">端到端测试 - Cypress <a class="header-anchor" href="#端到端测试-cypress" aria-label="Permalink to &quot;端到端测试 - Cypress&quot;">​</a></h2><p>这里选择Cypress作为端测框架，<a href="https://docs.cypress.io/guides/overview/why-cypress" target="_blank" rel="noreferrer">Cypress</a> 是一个用于前端端到端（End-to-End，E2E）测试的开源测试框架。它被设计用于对 Web 应用程序进行自动化测试，可以模拟用户与应用程序进行交互的行为，并验证应用程序的功能和用户体验</p><h3 id="安装使用" tabindex="-1">安装使用 <a class="header-anchor" href="#安装使用" aria-label="Permalink to &quot;安装使用&quot;">​</a></h3><p>你可以选择自己的npm包管理器进行安装</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> npm install cypress -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>配置npm脚本打开cypress</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">		&quot;</span><span style="color:#FFCB6B;">test:e2e</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">cypress open</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">	}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>或者直接使用<code>./node_modules/.bin/cypress open</code>。启动后出弹出cypress的界面，可以进行端到端测试和组件测试。从下图界面可以看出不管是端测还是组件测试都没有配置（Not Configured），这里我们选择第一个端到端测试：</p><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230818191548472.png" alt=""></p><p>进去后由于是初次使用cypress会引导对项目做初始化配置，点击<code>Continue</code>会在项目中生成对应的文件：</p><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230818191606558.png" alt=""></p><p>端到端测试cypress会检测本地计算机安装的浏览器，你可以选择要用哪个浏览器进行测试，或者使用electron。这里我选择使用electron</p><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230818091537963.png" alt=""></p><p>进来后就到了测试用例界面，初次下载不会有任何测试用例的。界面会引导你去创建第一个测试用例，左侧用来生成官方的测试例子，其可以作为用例的参考；右侧自己来创建测试用例，初次使用我们先点击生成官方例子：</p><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230818191656793.png" alt=""></p><p>下图便是官方的测试例子，可以看到有很多，对应的文件路径在<code>cypress/e2e</code>下</p><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230818191758958.png" alt=""></p><p>这些单测例子中随便点击一个就会测试对应的用例，这里我们点击<code>todo.cy.js</code>就可以开始测试了</p><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230818191951669.png" alt=""></p><p>可以看到测试界面主要包含两大板块，左侧主要是测试日志、统计、快照之类，右侧便是web界面。cypress会根据测试用例模拟用户行为，并生成对应的日志；web界面会显示每个步骤的形态，就好像是用户在操作一样</p><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/2023-08-18%2021.15.22.gif" alt=""></p><div class="img-title">动图演示</div><p><strong>除了使用open打开对应的界面外，也可以使用终端进行测试不用打开界面，只需要执行<code>cypress run</code>命令即可</strong></p><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>cypress配置包括全局、端测、组件测试几个方面，可以通过<code>cypress.config.js</code>配置文件进行配置：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> resolve </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> defineConfig </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cypress</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> defineConfig</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 端测配置</span></span>
<span class="line"><span style="color:#F07178;">  e2e</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 组件测试配置</span></span>
<span class="line"><span style="color:#F07178;">  component</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /* 其他的全局配置 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>以下是一些常见的配置：</p><ul><li>baseUrl：端测访问的基本地址，比如测试本地的web服务<code>http://localhost:8080</code>，这样在测试用例中就可以使用相对路径了</li><li>specPattern：测试用例文件，包含单测和组件测试，支持glob形式。这样就可以自定义测试用例的位置了</li><li>fixturesFolder：用来存放测试mock数据，默认读取根路径下的<code>cypress/fixtures</code>路径下的文件，你可以通过此属性修改对应的测试数据路径</li><li>supportFile：自定义全局配置、功能函数、自定义命令、环境变量等等，在每个测试文件执行前都会先加载执行全局的配置文件。默认的路径为<code>cypress/support/**</code>，可以自行修改，如果没有全局的配置请设置成<code>false</code></li><li>experimentalRunAllSpecs：值为true时测试界面会有一个测试全部用例的按钮，默认会false</li><li>video：当执行<code>cypress run</code>进行测试后生成对应的视频文件，设置成false不会生成</li><li>screenshotsFolder：快照保存路径，默认路径<code>cypress/screenshots</code></li><li>videosFolder：视频保存路径，默认路径<code>cypress/videos</code></li><li>screenshotOnRunFailure：当<code>cypress run</code>失败时生成对应的快照</li><li>downloadsFolder：当测试用例中下载文件时保存的路径</li><li>viewportWidth / viewportHeight：设置界面视口大小，可以模拟不同尺寸的屏幕</li></ul><p>有的配置对于 e2e和Component 都有，可以在全局配置，也可以在不同类型的测试中进行覆盖，基本配置就说这么多，更多配置参考👉 <a href="https://docs.cypress.io/guides/references/configuration" target="_blank" rel="noreferrer">官方文档</a></p><p>大概的配置结构如下：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">root</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#C3E88D;"> cypress.config.js # 配置文件</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#C3E88D;"> cypress</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;"> 	├── fixtures # 测试数据</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;">   │ 	└── user.json</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;"> 	└── supports # 全局配置</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#C3E88D;">     	└── index.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="基本端测" tabindex="-1">基本端测 <a class="header-anchor" href="#基本端测" aria-label="Permalink to &quot;基本端测&quot;">​</a></h3><p>这里我们尝试使用端测来测试Vue3的组件，端测我们要提供页面真实的模拟用户的交互等等，所以需要一个web服务应用，内部使用我们待测试的vue组件，然后模拟用户行为</p><ol><li>搭建web服务，假设这里使用vite搭建一个web应用</li><li>配置cypress的单测<code>baseUrl</code>，这样在用例中就可以使用相对地址了<div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> defineConfig</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  e2e</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">    baseUrl</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">http://localhost:10020</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 配置web基本地址</span></span>
<span class="line"><span style="color:#F07178;">    video</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> false</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> # 不生成视频</span></span>
<span class="line"><span style="color:#F07178;">    screenshotOnRunFailure</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> false</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> # 不生成快照</span></span>
<span class="line"><span style="color:#F07178;">    supportFile</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> false</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> # 不设置全局配置</span></span>
<span class="line"><span style="color:#F07178;">    specPattern</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">src/**/*.e2e.(tsx|ts)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> # 设置端测用例的位置</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li>新建button组件的测试用例：<div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// src/button/__tests__/button.e2e.tsx</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">reference</span><span style="color:#C792EA;font-style:italic;"> types</span><span style="color:#89DDFF;font-style:italic;">=</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#C3E88D;font-style:italic;">cypress</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#89DDFF;font-style:italic;"> /&gt;</span></span>
<span class="line"><span style="color:#82AAFF;">describe</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">首页测试</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  it</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">测试外观</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    cy</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">visit</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/button</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    cy</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.i-btn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">contains</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">按钮</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trigger</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">click</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li>启动测试：<code>npm run test:e2e</code></li><li>可以看到我们的界面已经有了刚刚新建的测试用例文件了</li></ol><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/image-20230818091559622.png" alt=""></p><ol start="6"><li>点击测试用例开始测试：</li></ol><p><img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/2023-08-19%2009.46.04.gif" alt=""></p><div class="img-title">动图演示</div><p>因为比较简单执行的比较快。左侧的测试日志鼠标移到对应的位置会显示对应的快照</p><p>以上便是一个最简单上手的端测用例，比较简单相应你已经也成功了。其他更多的测试用例api这里不做过多介绍，其实和jest差不多，你可以通过 <a href="https://docs.cypress.io/api/table-of-contents" target="_blank" rel="noreferrer">官方文档</a> 了解更多</p><h3 id="代码覆盖率" tabindex="-1">代码覆盖率 <a class="header-anchor" href="#代码覆盖率" aria-label="Permalink to &quot;代码覆盖率&quot;">​</a></h3><p>cypress也支持代码覆盖率的报告，通过安装对应的插件就可以轻松搞定</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#C3E88D;"> npm i @cypress/code-coverage babel-plugin-istanbul -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>添加babel配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// .babelrc</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">plugins</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">istanbul</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>添加全局功能配置：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// cypress/support/index.js</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">@cypress/code-coverage/support</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>对cypress进行配置：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// cypress.config.ts</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> resolve </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> defineConfig </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cypress</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> defineConfig</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  e2e</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">    setupNodeEvents</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">on</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> config</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">      require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@cypress/code-coverage/task</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)(</span><span style="color:#BABED8;">on</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> config</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">      on</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">file:preprocessor</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@cypress/code-coverage/use-babelrc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      return</span><span style="color:#BABED8;"> config</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    },</span></span>
<span class="line"><span style="color:#F07178;">    supportFile</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">cypress/supports/index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>更多请参考对应的👉 <a href="https://docs.cypress.io/guides/tooling/code-coverage" target="_blank" rel="noreferrer">官方文档</a></p><h3 id="钩子函数" tabindex="-1">钩子函数 <a class="header-anchor" href="#钩子函数" aria-label="Permalink to &quot;钩子函数&quot;">​</a></h3><p>在 Cypress 测试框架中，有一些钩子函数可以用于在测试执行的不同阶段执行额外的操作或设置。这些钩子函数是 Cypress 提供的全局函数，可以在测试文件中使用</p><ul><li>before: 函数在每个测试套件（describe 块）运行之前执行，并且只会执行一次。它可以用于设置测试套件级别的准备工作，例如初始化测试数据、登录用户等</li><li>after: 函数在每个测试套件（describe 块）运行完毕之后执行，并且只会执行一次。它可以用于清理测试套件级别的资源，例如清除测试数据、退出登录等</li><li>beforeEach: 函数在每个测试用例（it 块）运行之前执行。它通常用于设置每个测试用例的前置条件，例如重置状态、模拟请求等</li><li>afterEach: 函数在每个测试用例（it 块）运行完毕之后执行。它通常用于清理每个测试用例的后续操作，例如清除临时数据、还原状态等</li></ul><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h3><p>项目中可能会使用Jest进行单元测试、cypress进行端到端测试，由于jest和cypress有着形同的api，如：describe、it等等，会出现类型冲突的错误。这里我是在<code>tsconfig</code>中屏蔽掉cypress测试文件就可以了</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {},</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">exclude</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">src/**/*.e2e.tsx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#676E95;font-style:italic;"> // 屏蔽掉cypress测试用例</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><ul><li><a href="https://jestjs.io/docs/getting-started" target="_blank" rel="noreferrer">Jest官方文档</a></li><li><a href="https://github.com/jest-community/awesome-jest" target="_blank" rel="noreferrer">Jest最佳实践</a></li><li><a href="https://github.com/jest-community/vscode-jest" target="_blank" rel="noreferrer">vscode-jest</a></li><li><a href="https://docs.cypress.io/guides/overview/why-cypress" target="_blank" rel="noreferrer">Cypress guide</a></li><li><a href="https://github.com/cypress-io/cypress-realworld-app" target="_blank" rel="noreferrer">cypress-realworld-app</a></li><li><a href="https://github.com/cypress-io/cypress-component-testing-apps" target="_blank" rel="noreferrer">cypress-component-testing-apps</a></li></ul>`,175);function F(i,y,D,b,u,m){const a=n("Reward"),l=n("Gitalk");return t(),e("div",null,[c,s(a),s(l)])}const C=p(r,[["render",F]]);export{B as __pageData,C as default};
