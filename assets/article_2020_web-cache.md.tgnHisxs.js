import{_ as t,c as r,J as e,V as l,o as d,G as o}from"./chunks/framework.SV1ROkXV.js";const T=JSON.parse('{"title":"web缓存策略","description":"什么是强缓存和协商缓存、HTTP缓存、浏览器缓存,web如何做缓存提高应用的加载效率","frontmatter":{"title":"web缓存策略","description":"什么是强缓存和协商缓存、HTTP缓存、浏览器缓存,web如何做缓存提高应用的加载效率","keywords":"强缓存,协商缓存,HTTP缓存,浏览器缓存,内存缓存,缓存策略,缓存机制,性能优化","logo":"https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/icon-cache.png"},"headers":[],"relativePath":"article/2020/web-cache.md","filePath":"article/2020/web-cache.md","lastUpdated":1709440279000}'),i={name:"article/2020/web-cache.md"},h=l('<h1 id="web缓存策略" tabindex="-1">web缓存策略 <a class="header-anchor" href="#web缓存策略" aria-label="Permalink to &quot;web缓存策略&quot;">​</a></h1><p><code>缓存</code>简单的来说就是把需要的东西储存到指定的位置，等下次需要取到相应的内容时，先看储存的缓存里是否存在，如果存在直接拿缓存的内容，如果不存在重新获取即可；那么前端缓存主要指什么，又有那些缓存策略呢？</p><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><p>前端缓存是 <code>http缓存</code> 和 <code>浏览器缓存</code> 的结合，两者相辅相成，共同完成缓存。</p><ol><li>http缓存</li></ol><blockquote><p>主要是指客户端和服务器间的通信缓存，利用这一缓存可以提升服务器资源利用率，在资源的有效期内不用进行请求该资源，大大减少服务器的压力</p></blockquote><p>按照失效缓存策略分为：<code>强缓存</code>、<code>协商缓存</code></p><ol start="2"><li>浏览器缓存</li></ol><blockquote><p>浏览器缓存把请求到的服务端资源进行本地储存</p></blockquote><ul><li>按照缓存位置可以分为：<code>memory cache</code>、<code>disk cache</code>、<code>service worker cache</code>、<code>push cache</code></li><li>按照数据存储类型分为：<code>web storage</code>、<code>Cookie</code>、<code>IndexDB</code>等等</li></ul><p>待补充...</p><h2 id="相关文章" tabindex="-1">相关文章 <a class="header-anchor" href="#相关文章" aria-label="Permalink to &quot;相关文章&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Caching" target="_blank" rel="noreferrer">MDN HTTP Cache</a></li><li><a href="https://jakearchibald.com/2017h2-push-tougher-than-i-thought/" target="_blank" rel="noreferrer">HTTP/2 push is tougher than I thought</a></li></ul>',13);function n(s,p,_,b,u,m){const a=o("Reward"),c=o("Gitalk");return d(),r("div",null,[h,e(a),e(c)])}const w=t(i,[["render",n]]);export{T as __pageData,w as default};
