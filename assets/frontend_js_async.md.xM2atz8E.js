import{_ as a,c as s,o as e,V as n}from"./chunks/framework.SV1ROkXV.js";const D=JSON.parse('{"title":"Javascript异步编程","description":"同步和异步的区别,为什么说异步编程对于前端很重要,本文来看前端异步的发展过程","frontmatter":{"title":"Javascript异步编程","description":"同步和异步的区别,为什么说异步编程对于前端很重要,本文来看前端异步的发展过程","keywords":"Javascript异步编程,Promise,手写promise,回调函数,回调地狱,订阅发布,事件监听,async/await,迭代器,generator","logo":"https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/icon-js.png"},"headers":[],"relativePath":"frontend/js/async.md","filePath":"frontend/js/async.md","lastUpdated":1709440279000}'),o={name:"frontend/js/async.md"},t=n(`<h1 id="javascript异步编程" tabindex="-1">Javascript异步编程 <a class="header-anchor" href="#javascript异步编程" aria-label="Permalink to &quot;Javascript异步编程&quot;">​</a></h1><p>callback =&gt; 事件监听 =&gt; 发布订阅 =&gt; promise =&gt; generator =&gt; async/await</p><h2 id="同步和异步" tabindex="-1">同步和异步 <a class="header-anchor" href="#同步和异步" aria-label="Permalink to &quot;同步和异步&quot;">​</a></h2><p>简要概述及特点</p><h2 id="为什么需要异步" tabindex="-1">为什么需要异步 <a class="header-anchor" href="#为什么需要异步" aria-label="Permalink to &quot;为什么需要异步&quot;">​</a></h2><p>理解异步对于前端的重要性</p><h2 id="异步-影子" tabindex="-1">异步&quot;影子&quot; <a class="header-anchor" href="#异步-影子" aria-label="Permalink to &quot;异步&quot;影子&quot;&quot;">​</a></h2><p>介绍异步的不同源， 说明绝大多数api都有异步的影子，这也说明了异步的重要性</p><h2 id="回调函数" tabindex="-1">回调函数 <a class="header-anchor" href="#回调函数" aria-label="Permalink to &quot;回调函数&quot;">​</a></h2><p>ajax</p><h2 id="事件监听" tabindex="-1">事件监听 <a class="header-anchor" href="#事件监听" aria-label="Permalink to &quot;事件监听&quot;">​</a></h2><p>click</p><h2 id="发布订阅" tabindex="-1">发布订阅 <a class="header-anchor" href="#发布订阅" aria-label="Permalink to &quot;发布订阅&quot;">​</a></h2><p>eventbus</p><h2 id="promise" tabindex="-1">promise <a class="header-anchor" href="#promise" aria-label="Permalink to &quot;promise&quot;">​</a></h2><h2 id="迭代器generator" tabindex="-1">迭代器generator <a class="header-anchor" href="#迭代器generator" aria-label="Permalink to &quot;迭代器generator&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// what is a generator</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#89DDFF;"> *</span><span style="color:#82AAFF;">gen</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {};</span></span>
<span class="line"><span style="color:#BABED8;">g </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> gen</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#BABED8;"> g</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next </span><span style="color:#89DDFF;">===</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#89DDFF;"> typeof</span><span style="color:#BABED8;"> g</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">throw </span><span style="color:#89DDFF;">===</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="async-await" tabindex="-1">async/await <a class="header-anchor" href="#async-await" aria-label="Permalink to &quot;async/await&quot;">​</a></h2>`,18),r=[t];function l(p,c,i,h,d,u){return e(),s("div",null,r)}const m=a(o,[["render",l]]);export{D as __pageData,m as default};
