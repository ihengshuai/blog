import{_ as p,c as o,J as s,V as e,o as r,G as n}from"./chunks/framework.SV1ROkXV.js";const m=JSON.parse('{"title":"Promise使用与原理","description":"如何使用promise优雅的解决异步问题,promise使用技巧与原理","frontmatter":{"title":"Promise使用与原理","description":"如何使用promise优雅的解决异步问题,promise使用技巧与原理","keywords":"Promise,promise原理,异步操作,回调函数,异步机制","logo":"https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/icon-js.png"},"headers":[],"relativePath":"article/2019/promise.md","filePath":"article/2019/promise.md","lastUpdated":1709440279000}'),c={name:"article/2019/promise.md"},t=e(`<h1 id="promise使用与原理" tabindex="-1">Promise使用与原理 <a class="header-anchor" href="#promise使用与原理" aria-label="Permalink to &quot;Promise使用与原理&quot;">​</a></h1><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> PENDING </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">pending</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> FULFILLED </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">fulfilled</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> REJECTED </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">rejected</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> MyPromise</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  constructor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">executor</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    try</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">      executor</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">reject</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#89DDFF;font-style:italic;"> catch</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#82AAFF;">reject</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  status</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> PENDING</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  value</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#F07178;">  reason</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  onFulfilledCallback</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> []</span></span>
<span class="line"><span style="color:#F07178;">  onRejectedCallback</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  resolve</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> ==</span><span style="color:#BABED8;"> PENDING</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> FULFILLED</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      while</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">onFulfilledCallback</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">        const</span><span style="color:#BABED8;"> cb</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">onFulfilledCallback</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">shift()</span></span>
<span class="line"><span style="color:#F07178;">        cb(</span><span style="color:#BABED8;">value</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  reject</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">reason</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> ==</span><span style="color:#BABED8;"> PENDING</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> REJECTED</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#BABED8;">reason</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> reason</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      while</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">onRejectedCallback</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">        const</span><span style="color:#BABED8;"> cb</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">onRejectedCallback</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">shift()</span></span>
<span class="line"><span style="color:#F07178;">        cb(</span><span style="color:#BABED8;">reason</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">  static</span><span style="color:#F07178;"> resolve</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">param</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">param</span><span style="color:#89DDFF;"> instanceof</span><span style="color:#FFCB6B;"> MyPromise</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> param</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> MyPromise</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#82AAFF;"> resolve</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">param</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">  static</span><span style="color:#F07178;"> reject</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">param</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">param</span><span style="color:#89DDFF;"> instanceof</span><span style="color:#FFCB6B;"> MyPromise</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> param</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> MyPromise</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> reject</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#82AAFF;"> reject</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">param</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  then</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">onFulfilled</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> onRejected</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    onFulfilled</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> typeof</span><span style="color:#BABED8;"> onFulfilled</span><span style="color:#89DDFF;"> ===</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> ?</span><span style="color:#BABED8;"> onFulfilled</span><span style="color:#89DDFF;"> :</span><span style="color:#BABED8;font-style:italic;"> value</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> value</span></span>
<span class="line"><span style="color:#BABED8;">    onRejected</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> typeof</span><span style="color:#BABED8;"> onRejected</span><span style="color:#89DDFF;"> ===</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> ?</span><span style="color:#BABED8;"> onRejected</span><span style="color:#89DDFF;"> :</span><span style="color:#BABED8;font-style:italic;"> reason</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;font-style:italic;"> throw</span><span style="color:#BABED8;"> reason</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> _promise</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#F07178;"> MyPromise(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> reject</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> ==</span><span style="color:#BABED8;"> FULFILLED</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        queueMicrotask(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">          try</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">            const</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> onFulfilled(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">value</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">            resolvePromise(</span><span style="color:#BABED8;">_promise</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> resolve</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> reject</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">          }</span><span style="color:#89DDFF;font-style:italic;"> catch</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            reject(</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">          }</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> ==</span><span style="color:#BABED8;"> REJECTED</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        queueMicrotask(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">          try</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">            const</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> onRejected(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">reason</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">            resolvePromise(</span><span style="color:#BABED8;">_promise</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> resolve</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> reject</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">          }</span><span style="color:#89DDFF;font-style:italic;"> catch</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            reject(</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">          }</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> ==</span><span style="color:#BABED8;"> PENDING</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // 异步进行缓存回调函数</span></span>
<span class="line"><span style="color:#89DDFF;">        this.</span><span style="color:#BABED8;">onFulfilledCallback</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">push(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">          queueMicrotask(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            try</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">              const</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> onFulfilled(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">value</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">              resolvePromise(</span><span style="color:#BABED8;">_promise</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> resolve</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> reject</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">            }</span><span style="color:#89DDFF;font-style:italic;"> catch</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              reject(</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">            }</span></span>
<span class="line"><span style="color:#89DDFF;">          }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">        this.</span><span style="color:#BABED8;">onRejectedCallback</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">push(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">          queueMicrotask(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            try</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">              const</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> onRejected(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">reason</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">              resolvePromise(</span><span style="color:#BABED8;">_promise</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> resolve</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> reject</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">            }</span><span style="color:#89DDFF;font-style:italic;"> catch</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              reject(</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">            }</span></span>
<span class="line"><span style="color:#89DDFF;">          }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> _promise</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> resolvePromise</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> resolve</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> reject</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;"> ===</span><span style="color:#BABED8;"> x</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#82AAFF;"> reject</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">new</span><span style="color:#82AAFF;"> TypeError</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Chaining cycle detected for promise #&lt;Promise&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;"> instanceof</span><span style="color:#FFCB6B;"> MyPromise</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    try</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">      x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> reject</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#89DDFF;font-style:italic;"> catch</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#82AAFF;">      reject</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">    resolve</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">x</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> promise </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> MyPromise</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> reject</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">init Promsie</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#82AAFF;">  setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">    resolve</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">promise</span></span>
<span class="line"><span style="color:#89DDFF;">  .</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">v1</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">v1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#F78C6C;"> 2</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  .</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">v2</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">v2</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> MyPromise</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#82AAFF;"> resolve</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  .</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">v</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">v</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">end</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span><span style="color:#BABED8;font-style:italic;"> reason</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">reason</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">MyPromise</span></span>
<span class="line"><span style="color:#89DDFF;">  .</span><span style="color:#82AAFF;">resolve</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">new</span><span style="color:#82AAFF;"> MyPromise</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#82AAFF;"> resolve</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">static resolve</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)))</span></span>
<span class="line"><span style="color:#89DDFF;">  .</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">v</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">v</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">static</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">MyPromise</span></span>
<span class="line"><span style="color:#89DDFF;">  .</span><span style="color:#82AAFF;">reject</span><span style="color:#BABED8;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  .</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">null,</span><span style="color:#BABED8;font-style:italic;"> err</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(err))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">MyPromise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> MyPromise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">4</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">MyPromise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">6</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br></div></div><p>//待更新...</p>`,3);function F(D,y,i,B,b,A){const a=n("Reward"),l=n("Gitalk");return r(),o("div",null,[t,s(a),s(l)])}const u=p(c,[["render",F]]);export{m as __pageData,u as default};
