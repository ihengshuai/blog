import{_ as l,c as e,J as s,V as p,o as t,G as n}from"./chunks/framework.SV1ROkXV.js";const A=JSON.parse('{"title":"EventLoop事件循环机制(浏览器和Node EventLoop)","description":"由于JavaScript是个单线程的语言,异步任务都会通过回调来解决单线程问题,JavaScript内部通过EventLoop事件循环机制来调度异步任务,本篇会对比浏览器的EventLoop和Node的EventLoop展开讲解","frontmatter":{"title":"EventLoop事件循环机制(浏览器和Node EventLoop)","description":"由于JavaScript是个单线程的语言,异步任务都会通过回调来解决单线程问题,JavaScript内部通过EventLoop事件循环机制来调度异步任务,本篇会对比浏览器的EventLoop和Node的EventLoop展开讲解","keywords":"JS EventLoop,JS事件循环机制,浏览器EventLoop,NodeJS EventLoop,JS Engine,JS Runtime,JS异步编程,Promise,回调地狱,async/await,迭代器","logo":"https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/icon-js.png"},"headers":[],"relativePath":"frontend/js/eventloop.md","filePath":"frontend/js/eventloop.md","lastUpdated":1709440279000}'),r={name:"frontend/js/eventloop.md"},c=p("",103);function i(F,D,y,d,u,m){const a=n("Reward"),o=n("Gitalk");return t(),e("div",null,[c,s(a),s(o)])}const h=l(r,[["render",i]]);export{A as __pageData,h as default};
