import{_ as p,c as e,J as s,V as o,o as r,G as n}from"./chunks/framework.SV1ROkXV.js";const A=JSON.parse('{"title":"手写一个vue图片懒加载插件","description":"如何使用vue写一个图片懒加载插件指令","frontmatter":{"title":"手写一个vue图片懒加载插件","description":"如何使用vue写一个图片懒加载插件指令","keywords":"图片懒加载,vue插件,vue图片懒加载,性能优化,页面懒加载,页面性能","logo":"https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/icon-vue.png"},"headers":[],"relativePath":"article/2021/vue-img-lazyload.md","filePath":"article/2021/vue-img-lazyload.md","lastUpdated":1709440279000}'),c={name:"article/2021/vue-img-lazyload.md"},t=o(`<h1 id="手写vue图片懒加载插件" tabindex="-1">手写vue图片懒加载插件 <a class="header-anchor" href="#手写vue图片懒加载插件" aria-label="Permalink to &quot;手写vue图片懒加载插件&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>性能优化越来越被重视，其中的静态资源加载称为重灾区，如果网页的图片太多，一次加载会出现明显的卡顿，采用懒加载和预加载是解决其的良好手段</p><p>本篇就来用Vue和TypeScript来撸一个懒加载插件，在阅读本编之前，请先了解vue插件注册机制和自定义指令，如果你还不了解，可以看看<a href="https://cn.vuejs.org/v2/guide/custom-directive.html" target="_blank" rel="noreferrer">官方文档</a></p><p>实现效果 <img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/giphy.webp" alt=""></p><h2 id="功能实现" tabindex="-1">功能实现 <a class="header-anchor" href="#功能实现" aria-label="Permalink to &quot;功能实现&quot;">​</a></h2><blockquote><p>功能分析：在实现此功能前，可以将功能拆分为多个小功能，将不同的功能模块化，抽象出来，提高代码可读性</p></blockquote><p>分析1：</p><p>首先在加载目标图片时，会有默认的图片来占位，也就是占位图，并将图片状态置为<code>LOADING</code>，当达到某种条件时获取真实的图片，当真实的图片获取成功时，图片加载完毕，图片响应的状态为<code>LOADED</code>；当真实图片加载失败时，状态变为<code>ERROR</code>。因此，为了便于管理图片的各个状态，可以单独写个类<code>ImageManager</code>来管理图片的不同状态，而图片的状态也为懒加载管理器做好了铺垫</p><p>分析2： 图片状态管理器有了，应该还需要一个懒加载管理器<code>Lazy</code>，将所有需要懒加载的图片推到加载队列中<code>managerQueue</code>用来管理所有图片的状态。加载管理器需要对每个图片进行是否是要请求真实资源进行判断，当达到条件时，触发当前的图片管理器请求真实图片，当图片的状态不再是<code>LOADING</code>状态时，将其从<code>managerQueue</code>队列中剔除，这样就不用再检测当前<code>ImageManager</code>了</p><h3 id="属性定义" tabindex="-1">属性定义 <a class="header-anchor" href="#属性定义" aria-label="Permalink to &quot;属性定义&quot;">​</a></h3><p>懒加载器实例化参数类型和指令绑定值类型如下：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// types/index.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> DirectiveBinding</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">vue/types/options</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 初始化插件时，定义全局的loading和error（图片） 下面会降到 new Lazy({loading, error})</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> interface</span><span style="color:#FFCB6B;"> LazyOpts</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  loading</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> string</span></span>
<span class="line"><span style="color:#F07178;">  error</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 定义指令绑定值得类型，DirectiveBinding 的 value 为any类型，这里进行改造</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 这里就可以在 v-lazy=&quot;{src, loading, error}&quot; | src 使用这种对象值</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> interface</span><span style="color:#FFCB6B;"> DirectiveBindingType</span><span style="color:#C792EA;"> extends</span><span style="color:#FFCB6B;"> DirectiveBinding</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  value</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> src</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> loading</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> error</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// bind el type</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> type</span><span style="color:#FFCB6B;"> DirectiveBindingElemType</span><span style="color:#89DDFF;"> =</span><span style="color:#FFCB6B;"> HTMLImageElement</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> HTMLElement</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>图片管理器实例化参数类型如下：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 实例化图片管理器的选项</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> type</span><span style="color:#FFCB6B;"> ImageManagerOpts</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  el</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> DirectiveBindingElemType</span><span style="color:#676E95;font-style:italic;"> // 目标Element</span></span>
<span class="line"><span style="color:#F07178;">  src</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#676E95;font-style:italic;">  // 真实图片</span></span>
<span class="line"><span style="color:#F07178;">  loading</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#676E95;font-style:italic;">  // loading 图片</span></span>
<span class="line"><span style="color:#F07178;">  error</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#676E95;font-style:italic;">  // error图片</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="图片管理器" tabindex="-1">图片管理器 <a class="header-anchor" href="#图片管理器" aria-label="Permalink to &quot;图片管理器&quot;">​</a></h3><p>正如上述分析，图片有3中状态，即：<code>加载中</code>、<code>加载成功</code>、<code>加载失败</code>，三种状态渲染不同的url，这里先枚举出三种状态：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 图片状态</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> enum</span><span style="color:#FFCB6B;"> IMAGE_STATUS</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  LOADING</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 加载中</span></span>
<span class="line"><span style="color:#BABED8;">  LOADED</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">  // 加载成功</span></span>
<span class="line"><span style="color:#BABED8;">  ERROR</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">  // 加载失败</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>图片管理器考虑到自身状态的维护，可以用class进行构造</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> ImageManagerOpts</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> DirectiveBindingElemType</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">./types</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 唯一标识符</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> uid </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 图片管理器</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> ImageManager</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  src</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span></span>
<span class="line"><span style="color:#F07178;">  el</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> DirectiveBindingElemType</span></span>
<span class="line"><span style="color:#F07178;">  loading</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span></span>
<span class="line"><span style="color:#F07178;">  error</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span></span>
<span class="line"><span style="color:#F07178;">  status</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> IMAGE_STATUS</span></span>
<span class="line"><span style="color:#F07178;">  uid</span><span style="color:#89DDFF;">!:</span><span style="color:#FFCB6B;"> number</span><span style="color:#676E95;font-style:italic;"> // 图片的唯一标识符</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">  constructor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">opts</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> ImageManagerOpts</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">src</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> opts</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">src</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">el</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> opts</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">el</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">loading</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> opts</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">loading</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">error</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> opts</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">error</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">uid</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> uid</span><span style="color:#89DDFF;">++</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> IMAGE_STATUS</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">LOADING</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#82AAFF;">render</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">loading</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 渲染dom图片</span></span>
<span class="line"><span style="color:#F07178;">  render</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">src</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">el</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAttribute</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> src</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 加载资源，如果已经不是loading状态 终止</span></span>
<span class="line"><span style="color:#F07178;">  load</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">next</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> Function</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#BABED8;"> IMAGE_STATUS</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">LOADING</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#82AAFF;">renderSrc</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 异步加载资源，并改变状态</span></span>
<span class="line"><span style="color:#F07178;">  renderSrc</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">next</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> Function</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">    loadImage</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">src</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      .</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">        this.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> IMAGE_STATUS</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">LOADED</span></span>
<span class="line"><span style="color:#89DDFF;">        this.</span><span style="color:#82AAFF;">render</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">src</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">        next</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#82AAFF;"> next</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      .</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">        this.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> IMAGE_STATUS</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">ERROR</span></span>
<span class="line"><span style="color:#89DDFF;">        this.</span><span style="color:#82AAFF;">render</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">        console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warn</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">v-lazy:load img </span><span style="color:#89DDFF;">\${</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">src</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> failed, </span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">message</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">        next</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#82AAFF;"> next</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 异步获取图片</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> loadImage</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">src</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#89DDFF;"> new</span><span style="color:#FFCB6B;"> Promise</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> reject</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> img</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> Image</span><span style="color:#F07178;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    img</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onload</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">      resolve</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">      img</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">onload</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    img</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onerror</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">err</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">      reject</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">err</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">      img</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">onerror</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    img</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">src</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> src</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> ImageManager</span><span style="color:#89DDFF;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br></div></div><p>以上基本上已经定义好了<code>ImageManager</code>，现在我们可以这样使用它：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 实例化时，状态为loading，render loading image</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> manager </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> ImageManager</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;">el</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">src</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">loading</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">error</span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 当需要加载真实资源时</span></span>
<span class="line"><span style="color:#BABED8;">manager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">load</span><span style="color:#BABED8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>那么接下来就来创建懒加载器来管理所有的图片管理器</p><h3 id="懒加载管理器" tabindex="-1">懒加载管理器 <a class="header-anchor" href="#懒加载管理器" aria-label="Permalink to &quot;懒加载管理器&quot;">​</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  DirectiveBindingType</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  LazyOpts</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  DirectiveBindingElemType</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">./types</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> ImageManager</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> IMAGE_STATUS</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">./image-manager</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 可以默认一张图片</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> defaultImage</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">./default-data</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> DEFAULT_URL </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> defaultImage</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> Lazy</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  managerQueue</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">ImageManager</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> []</span></span>
<span class="line"><span style="color:#F07178;">  observer</span><span style="color:#89DDFF;">!:</span><span style="color:#FFCB6B;"> IntersectionObserver</span></span>
<span class="line"><span style="color:#F07178;">  loading</span><span style="color:#89DDFF;">!:</span><span style="color:#FFCB6B;"> string</span></span>
<span class="line"><span style="color:#F07178;">  error</span><span style="color:#89DDFF;">!:</span><span style="color:#FFCB6B;"> string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">  constructor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">options</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> LazyOpts</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">loading</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">loading</span><span style="color:#89DDFF;"> ||</span><span style="color:#BABED8;"> DEFAULT_URL</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">error</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">error</span><span style="color:#89DDFF;"> ||</span><span style="color:#BABED8;"> DEFAULT_URL</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#82AAFF;">initInterSectionObserver</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 使用指令时，添加当前元素</span></span>
<span class="line"><span style="color:#F07178;">  add</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> DirectiveBindingElemType</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> binding</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> DirectiveBindingType</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> src</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> error</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> loading</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#BABED8;"> binding</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;"> ===</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">object</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      src</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> binding</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">src</span><span style="color:#89DDFF;"> ||</span><span style="color:#89DDFF;"> &#39;&#39;</span></span>
<span class="line"><span style="color:#BABED8;">      error</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> binding</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">error</span></span>
<span class="line"><span style="color:#BABED8;">      loading</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> binding</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">loading</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">      src</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> binding</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;"> ||</span><span style="color:#89DDFF;"> &#39;&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> manager</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> ImageManager</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      el</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      src</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      loading</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> loading</span><span style="color:#89DDFF;"> ||</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">loading</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      error</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> error</span><span style="color:#89DDFF;"> ||</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">error</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">managerQueue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">manager</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">observer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">observe</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 使用IntersectionObserver观测managerQueue里的manager</span></span>
<span class="line"><span style="color:#F07178;">  initInterSectionObserver</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">observer</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> IntersectionObserver</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">entries</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">      entries</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">entry</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">entry</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">isIntersecting</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">          const</span><span style="color:#BABED8;"> manager</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">managerQueue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">find</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">manager</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> manager</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">el</span><span style="color:#89DDFF;"> ===</span><span style="color:#BABED8;"> entry</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">target</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">          if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">manager</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            // manager状态不是loading时 则移除对其的观测</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">manager</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#BABED8;"> IMAGE_STATUS</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">LOADING</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">              this.</span><span style="color:#82AAFF;">removeManager</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">manager</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">              return</span></span>
<span class="line"><span style="color:#89DDFF;">            }</span></span>
<span class="line"><span style="color:#BABED8;">            manager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">load</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">          }</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    },</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> rootMargin</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0px</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> threshold</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0.7</span><span style="color:#89DDFF;"> }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 移除目标manager</span></span>
<span class="line"><span style="color:#F07178;">  removeManager</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">manager</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> ImageManager</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> findIndex</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">managerQueue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">m</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> m</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">uid</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">manager</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">uid</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">findIndex</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#BABED8;">managerQueue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">findIndex</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">observer</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#BABED8;">observer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unobserve</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">manager</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 导出插件，需要按照Vue插件注册机制规范</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#89DDFF;font-style:italic;"> default</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  install</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">Vue</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> any</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> options</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> LazyOpts</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {})</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> lazy</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> Lazy</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">options</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">    Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">directive</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lazy</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">      bind</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> lazy</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">add</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">lazy</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br></div></div><p>至此，大体上已经完成所有功能了，当注册插件时，会实例化一个<code>Lazy</code>对象，并初始化一些初始状态<code>loading</code>、<code>error</code>、<code>IntersectionObserver</code>，有关IntersectionObserver的使用可以详见<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver" target="_blank" rel="noreferrer">MDN</a>，对于监测两者是否交叉一个友好的API；除了这些还有<code>managerQueue</code>队列</p><p>当使用<code>v-lazy</code>指令时，会执行<code>lazy的add方法</code>，将其添加到<code>managerQueue</code>中，并对其进行<code>oberve</code>，当元素处于交叉状态时，获取对应的manager，并加载其真实图片，当然可以在这里判断如果manager的状态已经不是loading，直接<code>removeManager</code>卸载对其的观测</p><p>简单使用：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 全局注册</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> VLazy </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">./directives/lazy/lazy</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#BABED8;">(VLazy</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  error</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">/error.gif</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">  // 初始化默认错误</span></span>
<span class="line"><span style="color:#F07178;">  loading</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">/loading.gif</span><span style="color:#89DDFF;">&#39;</span><span style="color:#676E95;font-style:italic;"> // 默认loading</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// HTML</span></span>
<span class="line"><span style="color:#BABED8;">&lt;</span><span style="color:#FFCB6B;">template</span><span style="color:#BABED8;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 正常加载</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#BABED8;">img v</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">lazy</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&#39;https://s4.ax1x.com/2021/12/15/TS7e29.gif&#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 对当前元素提供指定错误图片</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#BABED8;">img width</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">200</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> height</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">200</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> v</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">lazy</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{ src: &#39;/adad.png&#39;, error: &#39;https://s4.ax1x.com/2021/12/15/TSbQhD.jpg&#39; }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 错误图片，将会加载错误</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#BABED8;">img v</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">lazy</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&#39;/a1.jpg&#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">出错了...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#BABED8;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="优化" tabindex="-1">优化 <a class="header-anchor" href="#优化" aria-label="Permalink to &quot;优化&quot;">​</a></h2><p>以上基本实现了所需的功能，但可能还有一些优化点需要做，如：<code>IntersectionObserver</code>的API虽然很好用，大部分浏览器也支持其特性，可惜的是IE却都不支持，如果想使用在IE里的项目，就得做兼容处理了；</p><p>再比如说，所有添加到队列中的manager，每当加载真实或者错误图片时，都会执行<code>loadImage</code>函数，创建img，请求图片，如果有多个图片的地址是一样的，就没必要再执行<code>loadImage</code>操作了，直接渲染目标图片即可，这种以空间换时间的策略会提升性能</p><p>上面仅仅是处理了src图片，也有些场景下还是会用到背景图，因此还需要一些改造，来支持背景图</p><h3 id="兼容处理" tabindex="-1">兼容处理 <a class="header-anchor" href="#兼容处理" aria-label="Permalink to &quot;兼容处理&quot;">​</a></h3><p>当在IE时，不再使用<code>IntersectionObserver</code>，就会用到传统的滚动检测目标对象，进行差值计算，进行图片加载。因为此涉及到判断是否加载真正图片，只许对<code>Lazy</code>管理器进行改造即可</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> Lazy</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // ...省略部分代码</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 定义属性来判断是否支持</span></span>
<span class="line"><span style="color:#F07178;">  supportObserver</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> boolean</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> (</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">IntersectionObserver</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> in</span><span style="color:#BABED8;"> window)</span></span>
<span class="line"><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#C792EA;">  constructor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">options</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> LazyOpts</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">loading</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">loading</span><span style="color:#89DDFF;"> ||</span><span style="color:#BABED8;"> DEFAULT_URL</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">error</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">error</span><span style="color:#89DDFF;"> ||</span><span style="color:#BABED8;"> DEFAULT_URL</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 这里不再直接初始化IntersectionObserver</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#82AAFF;">init</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#F07178;">  init</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 不支持IntersectionObserver时直接初始化 scroll</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">supportObserver</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#82AAFF;">initInterSectionObserver</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#82AAFF;">initScrollListener</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 检测window滚动</span></span>
<span class="line"><span style="color:#F07178;">  initScrollListener</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> screenHeight</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">documentElement</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">clientHeight</span></span>
<span class="line"><span style="color:#BABED8;">    window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">scroll</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#82AAFF;">doScrollCallback</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">screenHeight</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 滚动时执行判断每个manager是否已经达到条件加载图片</span></span>
<span class="line"><span style="color:#F07178;">  doScrollCallback</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">screenHeight</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">managerQueue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">manager</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">      const</span><span style="color:#BABED8;"> rest</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> manager</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">el</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBoundingClientRect</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">manager</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#BABED8;"> IMAGE_STATUS</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">LOADING</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        this.</span><span style="color:#82AAFF;">removeManager</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">manager</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#F07178;">      </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">rest</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">top</span><span style="color:#89DDFF;"> &gt;=</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#BABED8;"> rest</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">top</span><span style="color:#89DDFF;"> &lt;=</span><span style="color:#BABED8;"> screenHeight</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 100</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        manager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">load</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#F07178;">  add</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> HTMLImageElement</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> binding</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> DirectiveBindingType</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //.. 省略部分代码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 这里也需要判断</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 当不支持IntersectionObserver时，不再observe目标</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 而初次执行doScrollCallback（可能初次目标已经达到加载条件）</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">supportObserver</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#BABED8;">observer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">observe</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">      const</span><span style="color:#BABED8;"> screenHeight</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">documentElement</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">clientHeight</span></span>
<span class="line"><span style="color:#82AAFF;">      setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> this.</span><span style="color:#82AAFF;">doScrollCallback</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">screenHeight</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><p>这样就解决了IE兼容的问题，现在可以打开IE浏览器，发现也是好使的，证明兼容性是没有问题的</p><h3 id="图片缓存" tabindex="-1">图片缓存 <a class="header-anchor" href="#图片缓存" aria-label="Permalink to &quot;图片缓存&quot;">​</a></h3><p>针对缓存可以创建一个<code>Set</code>，对所有图片进行收集，当后面的图片进行请求时，先判断有没有对应的缓存，如有的话直接进行渲染即可；那么知道缓存的内容了，又在哪里创建缓存器呢？缓存器应该不会改变，从而可以在<code>Lazy</code>中创建缓存器，将其传入<code>ImageManager</code></p><p>定义先加上对应的字段：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> type</span><span style="color:#FFCB6B;"> ImageManagerOpts</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  //...</span></span>
<span class="line"><span style="color:#F07178;">  cache</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> Set</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>接着先创建缓存器：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> Lazy</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#F07178;">  cache</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> Set</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#F07178;"> Set</span><span style="color:#BABED8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#F07178;">  add</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> HTMLImageElement</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> binding</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> DirectiveBindingType</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 创建manager时将cache传入</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> manager</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> ImageManager</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      el</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      src</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      cache</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">cache</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      //...</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>在<code>ImageManager</code>里需要在加载时，判断时是否可以命中缓存，如有直接加载即可；没有命中缓存时，当家在完毕或失败时，对对应的URL进行缓存，提供后面缓存使用</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> ImageManager</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  //...</span></span>
<span class="line"><span style="color:#F07178;">  cache</span><span style="color:#89DDFF;">!:</span><span style="color:#FFCB6B;"> Set</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">  constructor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">opts</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> ImageManagerOpts</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">cache</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> opts</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">cache</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  load</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">next</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> Function</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //...</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 判断是否命中缓存，如有直接渲染</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">cache</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">src</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#82AAFF;">render</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">src</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#BABED8;">status</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> IMAGE_STATUS</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">LOADED</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      return</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //...</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 加载失败或成功对其缓存</span></span>
<span class="line"><span style="color:#F07178;">  renderSrc</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">next</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> Function</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">    loadImage</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">src</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      .</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        //...</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // 缓存</span></span>
<span class="line"><span style="color:#89DDFF;">        this.</span><span style="color:#BABED8;">cache</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">src</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      .</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        //缓存</span></span>
<span class="line"><span style="color:#89DDFF;">        this.</span><span style="color:#BABED8;">cache</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>缓存大致就这样，可以试试</p><h3 id="背景图" tabindex="-1">背景图 <a class="header-anchor" href="#背景图" aria-label="Permalink to &quot;背景图&quot;">​</a></h3><p>支持背景图需要用到<code>指令参数</code>，处理起来也比较简单，判断指令是否具有<code>backgroundImage</code>（自定义）参数，有的话进行背景图渲染</p><p>类型定义：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#C792EA;"> type</span><span style="color:#FFCB6B;"> ImageManagerOpts</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#F07178;">  isBackGround</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> boolean</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>管理器改：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> Lazy</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#F07178;">  add</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> HTMLImageElement</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> binding</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> DirectiveBindingType</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> src</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> error</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> loading</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 判断是不是背景参数</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> isBackGround</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">binding</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">arg</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#BABED8;"> binding</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">arg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toLocaleUpperCase</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">===</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">BACKGROUNDIMAGE</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#FFCB6B;"> boolean</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> manager</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> ImageManager</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      //...</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // 传入</span></span>
<span class="line"><span style="color:#BABED8;">      isBackGround</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> ImageManager</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  //...</span></span>
<span class="line"><span style="color:#F07178;">  isBackGround</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> boolean</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">  constructor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">opts</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> ImageManagerOpts</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //...</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">isBackGround</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> opts</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">isBackGround</span><span style="color:#89DDFF;"> ||</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  render</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">src</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 背景图渲染</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">isBackGround</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#BABED8;">el</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">style</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">backgroundImage</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> \`</span><span style="color:#C3E88D;">url(</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">src</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      return</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">el</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAttribute</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> src</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>现在就可以使用背景图片渲染了：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--背景图渲染，也可以指定loading、error等等--&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span></span>
<span class="line"><span style="color:#C792EA;">    v-lazy:backgroundImage</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{src: &#39;https://s4.ax1x.com/2021/12/15/TScWbd.jpg&#39;, loading: &#39;/default-loading.gif&#39;}</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">    class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">back-img</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>本篇主要通过一个图片管理器<code>ImageManager</code>和一个懒加载管理器<code>Lazy</code>，分别实现了对图片状态的管理，和对图片请求真实资源的管理。通过使用交叉观测器<code>IntersectionObserver</code>来观测图片的临界值来加载真实资源，后又使用<code>scroll</code>监测window滚动来兼容IE对<code>IntersectionObserver</code>的不支持，最后进行各种优化完成插件功能</p><p>以上源码可以在<a href="https://github.com/ihengshuai/vue-lazy-plugin" target="_blank" rel="noreferrer">GitHub下载</a>，感谢点赞、感谢支持😄</p>`,57);function F(D,y,i,b,B,u){const a=n("Reward"),l=n("Gitalk");return r(),e("div",null,[t,s(a),s(l)])}const E=p(c,[["render",F]]);export{A as __pageData,E as default};
