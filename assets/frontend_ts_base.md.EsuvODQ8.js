import{_ as s,c as a,o as n,V as l}from"./chunks/framework.SV1ROkXV.js";const d=JSON.parse('{"title":"typescript","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/ts/base.md","filePath":"frontend/ts/base.md","lastUpdated":1709440279000}'),e={name:"frontend/ts/base.md"},p=l(`<h1 id="typescript" tabindex="-1">typescript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;typescript&quot;">​</a></h1><p>JS是个动态弱类型语言，使用非常自由，但随着项目的不断演变代码越多产生的不确定性就会越大，而ts可以更好的进行类型约束，降低程序的不稳定性</p><h2 id="基础类型" tabindex="-1">基础类型 <a class="header-anchor" href="#基础类型" aria-label="Permalink to &quot;基础类型&quot;">​</a></h2><h2 id="内置null-undefined-void" tabindex="-1">内置null/undefined/void <a class="header-anchor" href="#内置null-undefined-void" aria-label="Permalink to &quot;内置null/undefined/void&quot;">​</a></h2><h2 id="内置any-unknown-never" tabindex="-1">内置any/unknown/never <a class="header-anchor" href="#内置any-unknown-never" aria-label="Permalink to &quot;内置any/unknown/never&quot;">​</a></h2><h2 id="枚举" tabindex="-1">枚举 <a class="header-anchor" href="#枚举" aria-label="Permalink to &quot;枚举&quot;">​</a></h2><h2 id="接口interface和类型别名type" tabindex="-1">接口interface和类型别名type <a class="header-anchor" href="#接口interface和类型别名type" aria-label="Permalink to &quot;接口interface和类型别名type&quot;">​</a></h2><h2 id="联合类型和交叉类型" tabindex="-1">联合类型和交叉类型 <a class="header-anchor" href="#联合类型和交叉类型" aria-label="Permalink to &quot;联合类型和交叉类型&quot;">​</a></h2><h2 id="索引类型keyof" tabindex="-1">索引类型keyof <a class="header-anchor" href="#索引类型keyof" aria-label="Permalink to &quot;索引类型keyof&quot;">​</a></h2><h2 id="类型查询typeof" tabindex="-1">类型查询typeof <a class="header-anchor" href="#类型查询typeof" aria-label="Permalink to &quot;类型查询typeof&quot;">​</a></h2><h2 id="类型守卫" tabindex="-1">类型守卫 <a class="header-anchor" href="#类型守卫" aria-label="Permalink to &quot;类型守卫&quot;">​</a></h2><p>类型收窄(类型推导)</p><ul><li>is</li><li>typeof</li><li>in</li><li>instanceof</li></ul><ol><li>守卫基本类型</li><li>守卫对象类型、联合类型</li></ol><h2 id="类class" tabindex="-1">类Class <a class="header-anchor" href="#类class" aria-label="Permalink to &quot;类Class&quot;">​</a></h2><h2 id="泛型" tabindex="-1">泛型 <a class="header-anchor" href="#泛型" aria-label="Permalink to &quot;泛型&quot;">​</a></h2><ol><li><code>type&lt;T&gt;</code></li><li><code>interface&lt;T&gt;</code></li><li><code>function&lt;T&gt;</code></li><li><code>Class&lt;T&gt;</code></li><li><code>Promise&lt;T&gt;</code></li></ol><h2 id="条件类型" tabindex="-1">条件类型 <a class="header-anchor" href="#条件类型" aria-label="Permalink to &quot;条件类型&quot;">​</a></h2><ol><li>extends</li><li>infer</li><li>分布式条件类型</li></ol><h2 id="鸭子辨形" tabindex="-1">鸭子辨形 <a class="header-anchor" href="#鸭子辨形" aria-label="Permalink to &quot;鸭子辨形&quot;">​</a></h2><p>里氏替换</p><h2 id="内置工具类型" tabindex="-1">内置工具类型 <a class="header-anchor" href="#内置工具类型" aria-label="Permalink to &quot;内置工具类型&quot;">​</a></h2><ol><li>属性</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#FFCB6B;"> Partial</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  [</span><span style="color:#FFCB6B;">K</span><span style="color:#89DDFF;"> in</span><span style="color:#89DDFF;"> keyof</span><span style="color:#FFCB6B;"> T</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> T</span><span style="color:#BABED8;">[</span><span style="color:#FFCB6B;">K</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#FFCB6B;"> Required</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  [</span><span style="color:#FFCB6B;">K</span><span style="color:#89DDFF;"> in</span><span style="color:#89DDFF;"> keyof</span><span style="color:#FFCB6B;"> T</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">-?:</span><span style="color:#FFCB6B;"> T</span><span style="color:#BABED8;">[</span><span style="color:#FFCB6B;">K</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#FFCB6B;"> Readonly</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  readonly</span><span style="color:#BABED8;"> [</span><span style="color:#FFCB6B;">K</span><span style="color:#89DDFF;"> in</span><span style="color:#89DDFF;"> keyof</span><span style="color:#FFCB6B;"> T</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> T</span><span style="color:#BABED8;">[</span><span style="color:#FFCB6B;">K</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 可变的</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#FFCB6B;"> Mutable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  -</span><span style="color:#C792EA;">readonly</span><span style="color:#BABED8;"> [</span><span style="color:#FFCB6B;">K</span><span style="color:#89DDFF;"> in</span><span style="color:#89DDFF;"> keyof</span><span style="color:#FFCB6B;"> T</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> T</span><span style="color:#BABED8;">[</span><span style="color:#FFCB6B;">K</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ol start="2"><li>结构</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#FFCB6B;"> Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">K</span><span style="color:#C792EA;"> extends</span><span style="color:#89DDFF;"> keyof</span><span style="color:#FFCB6B;"> any</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> V</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  [</span><span style="color:#FFCB6B;">P</span><span style="color:#89DDFF;"> in</span><span style="color:#FFCB6B;"> K</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> V</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#FFCB6B;"> Pick</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> K</span><span style="color:#C792EA;"> extends</span><span style="color:#89DDFF;"> keyof</span><span style="color:#FFCB6B;"> T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  [</span><span style="color:#FFCB6B;">P</span><span style="color:#89DDFF;"> in</span><span style="color:#FFCB6B;"> K</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> T</span><span style="color:#BABED8;">[</span><span style="color:#FFCB6B;">P</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#FFCB6B;"> Omit</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> K</span><span style="color:#C792EA;"> extends</span><span style="color:#FFCB6B;"> any</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="常用" tabindex="-1">常用 <a class="header-anchor" href="#常用" aria-label="Permalink to &quot;常用&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#FFCB6B;"> LiteralToPrimitive</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> =</span><span style="color:#FFCB6B;"> T</span><span style="color:#C792EA;"> extends</span><span style="color:#FFCB6B;"> string</span></span>
<span class="line"><span style="color:#89DDFF;">  ?</span><span style="color:#FFCB6B;"> string</span></span>
<span class="line"><span style="color:#89DDFF;">  :</span><span style="color:#FFCB6B;"> T</span><span style="color:#C792EA;"> extends</span><span style="color:#FFCB6B;"> number</span></span>
<span class="line"><span style="color:#89DDFF;">  ?</span><span style="color:#FFCB6B;"> number</span></span>
<span class="line"><span style="color:#89DDFF;">  :</span><span style="color:#FFCB6B;"> T</span><span style="color:#C792EA;"> extends</span><span style="color:#FFCB6B;"> boolean</span></span>
<span class="line"><span style="color:#89DDFF;">  ?</span><span style="color:#FFCB6B;"> boolean</span></span>
<span class="line"><span style="color:#89DDFF;">  :</span><span style="color:#FFCB6B;"> never</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>// 待更新...</p>`,29),o=[p];function r(t,c,i,F,y,D){return n(),a("div",null,o)}const b=s(e,[["render",r]]);export{d as __pageData,b as default};
