import{_ as e,c as p,J as s,V as o,o as r,G as n}from"./chunks/framework.SV1ROkXV.js";const D=JSON.parse('{"title":"Docker安装与配置","description":"docker基础入门从安装到配置","frontmatter":{"title":"Docker安装与配置","description":"docker基础入门从安装到配置","keywords":"docker基础学习,docker安装配置,docker优缺点,centos安装docker","logo":"https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/icon-docker.png"},"headers":[],"relativePath":"fullstack/docker/install-configure.md","filePath":"fullstack/docker/install-configure.md","lastUpdated":1709440279000}'),c={name:"fullstack/docker/install-configure.md"},t=o(`<h1 id="docker安装与配置" tabindex="-1">Docker安装与配置 <a class="header-anchor" href="#docker安装与配置" aria-label="Permalink to &quot;Docker安装与配置&quot;">​</a></h1><p>为什么出现Docker？传统的开发和部署存在着许多环境和配置的不兼容的问题，docker就是将环境和代码统一打包的来解决这些兼容问题。Docker是一个统一了运行环境和配置问题的虚拟容器技术，是一个内核级虚拟技术。使用镜像，保证了处处环境的一致性。</p><p>我们知道，如果将计算机的层次做一下简单的划分，最底层是硬件，最上层是软件，中间是操作系统。（这是一种极为笼统且不严谨不专业的划分，我只记到这里了……）我们非常熟悉的虚拟机，就是一个物理硬件层抽象，运行在硬件之上：它向下面对一套硬件和硬件接口，对其进行虚拟，然后向上提供一套独立的操作系统，然后就可以在操作系统之上再运行各种软件应用等（如下图右，可以无视那个“管理程序”层因为我也不知道是啥）。这就使得虚拟机这个东西非常庞大沉重（因为包含了一整套操作系统，一般都好几G，还可能有一套单独的存储空间），启动时间长（一般几分钟，有SSD不算），且不容易移植（因为我们知道，在安装操作系统的时候，会根据硬件的不同编译出不同的内核，而每台电脑的硬件配置几乎不会完全一样，因而直接把一台电脑的操作系统文件考到另一台一般是没法启动的）。而容器是一个应用层抽象，运行在操作系统之上的，确切地说是操作系统内核之上（如下图左），面对的是操作系统提供的接口，属于进程级别；容器对我们的代码和依赖进行打包，比如一个docker中只有一个python3，还有TensorFlow以及其他的package（经常会在一个docker中发现连“sudo”命令都没有）；这样体积就很小，启动快（几秒几毫秒），且容易移植（不同硬件上的同一操作系统向上提供相同的接口）。</p><p>可以将容器镜像看作是mini版的虚拟机，但两者并不相通，先来看看二者优缺点。</p><h2 id="优缺点" tabindex="-1">优缺点 <a class="header-anchor" href="#优缺点" aria-label="Permalink to &quot;优缺点&quot;">​</a></h2><p>传统的虚拟技术要在一个机器上安装虚拟机、各种软件，再部署应用，存在一系列的缺点：</p><ul><li>需要虚拟出一套完整的硬件后，运行一个完整的操作系统，在系统上运行所需的应用程序</li><li>启动慢</li><li>资源占用多</li><li>冗余步骤多</li><li>迁移困难</li></ul><p>而Docker使用容器化技术完美的解决了这些问题，其具备：</p><ul><li>直接运行与宿主机的内核</li><li>容器内没有自己内核，没有进行硬件虚拟，更轻量</li><li>容器相互隔离，互不影响</li><li>更快交付、部署</li><li>便捷升级和扩容</li><li>统一标准、更简单的运维</li><li>节约成本</li></ul><p>有了容器化技术对于应用的部署更加方便，也更好维护，这也促使云原生的发展。</p><h2 id="docker架构" tabindex="-1">docker架构 <a class="header-anchor" href="#docker架构" aria-label="Permalink to &quot;docker架构&quot;">​</a></h2><p>Docker 架构分为客户端-服务器架构和主从架构，具体如下：</p><p>客户端-服务器架构：Docker 采用客户端-服务器架构，其中客户端是 Docker 命令行工具，用于与 Docker 服务端通信。Docker 服务端是 Docker 引擎，负责管理和运行 Docker 容器。客户端和服务端可以运行在同一台机器上，也可以通过网络连接运行在不同的机器上。</p><p>主从架构：Docker Swarm 是一个用于管理多个 Docker 容器的集群工具，采用主从架构。Docker Swarm 集群由一个管理节点和多个工作节点组成，管理节点负责整个集群的管理和调度，工作节点负责运行 Docker 容器。管理节点和工作节点可以运行在同一台机器上，也可以通过网络连接运行在不同的机器上。 <img src="https://ihengshuai-demo1.oss-cn-beijing.aliyuncs.com/iShot_2022-09-04_18.05.31.png" alt="iShot_2022-09-04_18.05.31"></p><p>docker所安装的镜像在本地都是一个个文件，可以通过<code>docker info</code>查看存储位置</p><h2 id="docker三大组件" tabindex="-1">Docker三大组件 <a class="header-anchor" href="#docker三大组件" aria-label="Permalink to &quot;Docker三大组件&quot;">​</a></h2><ul><li>镜像（Image）：一个root文件系统的模板，相当于 一个类</li><li>容器（Container）：docker run 镜像就是容器（最小的linux内核文件和运行的应用程序），镜像和容器的关系，就像是面向对象程序设计中的 <code>类</code> 和 <code>实例</code>一样，镜像是静态的定义，容器是镜像运行时的实体</li><li>仓库（Repositry）：保存镜像的仓库，每个仓库可以包含多个Tag，对应不同的镜像</li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>本文基于ARM架构Centos7虚拟机安装的，如果你的环境和我不一致，可以参考<a href="https://docs.docker.com/engine/install/" target="_blank" rel="noreferrer">官方文档</a>或其他资料</p><ol><li>卸载掉机器上可能存在的docker相关依赖，如果你没有安装过，可以忽略此步骤</li></ol><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#C3E88D;"> yum remove docker </span><span style="color:#BABED8;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">  docker-client </span><span style="color:#BABED8;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">  docker-client-latest </span><span style="color:#BABED8;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">  docker-common </span><span style="color:#BABED8;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">  docker-latest </span><span style="color:#BABED8;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">  docker-latest-logrotate </span><span style="color:#BABED8;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">  docker-logrotate </span><span style="color:#BABED8;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">  docker-engine</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="2"><li>配置docker仓库地址</li></ol><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#C3E88D;"> yum install -y yum-utils</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 设置ali仓库加速地址</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#C3E88D;"> yum-config-manager </span><span style="color:#BABED8;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">    --add-repo</span><span style="color:#C3E88D;"> https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li>下载docker 这里你可以根据自己的需求安装指定版本的docker，不指定版本默认latest最新版本</li></ol><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 查看可安装的版本</span></span>
<span class="line"><span style="color:#FFCB6B;">yum</span><span style="color:#C3E88D;"> list docker-ce --showduplicates </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> sort</span><span style="color:#C3E88D;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 这里安装最新版</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#C3E88D;"> yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="4"><li>启动docker并配置开机自启</li></ol><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#C3E88D;"> enable docker --now</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="5"><li>查看docker状态</li></ol><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 查看运行状态</span></span>
<span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#C3E88D;"> status docker</span></span>
<span class="line"><span style="color:#FFCB6B;">●</span><span style="color:#C3E88D;"> docker.service - Docker Application Container Engine</span></span>
<span class="line"><span style="color:#FFCB6B;">   Loaded:</span><span style="color:#C3E88D;"> loaded </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">/usr/lib/systemd/system/docker.service</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;"> enabled</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;"> vendor</span><span style="color:#C3E88D;"> preset: disabled</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">   Active:</span><span style="color:#C3E88D;"> active </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">running</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> since 四 </span><span style="color:#F78C6C;">2023</span><span style="color:#C3E88D;">-03-23 </span><span style="color:#F78C6C;">22</span><span style="color:#C3E88D;">:22:10 CST</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;"> 7h</span><span style="color:#C3E88D;"> left</span></span>
<span class="line"><span style="color:#FFCB6B;">     Docs:</span><span style="color:#C3E88D;"> https://docs.docker.com</span></span>
<span class="line"><span style="color:#FFCB6B;"> Main</span><span style="color:#C3E88D;"> PID: </span><span style="color:#F78C6C;">1406</span><span style="color:#89DDFF;"> (</span><span style="color:#FFCB6B;">dockerd</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">    Tasks:</span><span style="color:#F78C6C;"> 9</span></span>
<span class="line"><span style="color:#FFCB6B;">   Memory:</span><span style="color:#F78C6C;"> 100.0</span><span style="color:#C3E88D;">M</span></span>
<span class="line"><span style="color:#FFCB6B;">   CGroup:</span><span style="color:#C3E88D;"> /system.slice/docker.service</span></span>
<span class="line"><span style="color:#FFCB6B;">           └─1406</span><span style="color:#C3E88D;"> /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看版本</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> version</span></span>
<span class="line"><span style="color:#FFCB6B;">Client:</span><span style="color:#C3E88D;"> Docker Engine - Community</span></span>
<span class="line"><span style="color:#FFCB6B;"> Version:</span><span style="color:#F78C6C;">           23.0</span><span style="color:#C3E88D;">.1</span></span>
<span class="line"><span style="color:#FFCB6B;"> API</span><span style="color:#C3E88D;"> version:       </span><span style="color:#F78C6C;">1.42</span></span>
<span class="line"><span style="color:#FFCB6B;"> Go</span><span style="color:#C3E88D;"> version:        go1.19.5</span></span>
<span class="line"><span style="color:#FFCB6B;"> Git</span><span style="color:#C3E88D;"> commit:        a5ee5b1</span></span>
<span class="line"><span style="color:#FFCB6B;"> Built:</span><span style="color:#C3E88D;">             Thu Feb  </span><span style="color:#F78C6C;">9</span><span style="color:#F78C6C;"> 19</span><span style="color:#C3E88D;">:49:05 </span><span style="color:#F78C6C;">2023</span></span>
<span class="line"><span style="color:#FFCB6B;"> OS/Arch:</span><span style="color:#C3E88D;">           linux/arm64</span></span>
<span class="line"><span style="color:#FFCB6B;"> Context:</span><span style="color:#C3E88D;">           default</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Server:</span><span style="color:#C3E88D;"> Docker Engine - Community</span></span>
<span class="line"><span style="color:#FFCB6B;"> Engine:</span></span>
<span class="line"><span style="color:#FFCB6B;">  Version:</span><span style="color:#F78C6C;">          23.0</span><span style="color:#C3E88D;">.1</span></span>
<span class="line"><span style="color:#FFCB6B;">  API</span><span style="color:#C3E88D;"> version:      </span><span style="color:#F78C6C;">1.42</span><span style="color:#89DDFF;"> (</span><span style="color:#FFCB6B;">minimum</span><span style="color:#C3E88D;"> version </span><span style="color:#F78C6C;">1.12</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">  Go</span><span style="color:#C3E88D;"> version:       go1.19.5</span></span>
<span class="line"><span style="color:#FFCB6B;">  Git</span><span style="color:#C3E88D;"> commit:       bc3805a</span></span>
<span class="line"><span style="color:#FFCB6B;">  Built:</span><span style="color:#C3E88D;">            Thu Feb  </span><span style="color:#F78C6C;">9</span><span style="color:#F78C6C;"> 19</span><span style="color:#C3E88D;">:47:21 </span><span style="color:#F78C6C;">2023</span></span>
<span class="line"><span style="color:#FFCB6B;">  OS/Arch:</span><span style="color:#C3E88D;">          linux/arm64</span></span>
<span class="line"><span style="color:#FFCB6B;">  Experimental:</span><span style="color:#89DDFF;">     false</span></span>
<span class="line"><span style="color:#FFCB6B;"> containerd:</span></span>
<span class="line"><span style="color:#FFCB6B;">  Version:</span><span style="color:#F78C6C;">          1.6</span><span style="color:#C3E88D;">.18</span></span>
<span class="line"><span style="color:#FFCB6B;">  GitCommit:</span><span style="color:#F78C6C;">        2456</span><span style="color:#C3E88D;">e983eb9e37e47538f59ea18f2043c9a73640</span></span>
<span class="line"><span style="color:#FFCB6B;"> runc:</span></span>
<span class="line"><span style="color:#FFCB6B;">  Version:</span><span style="color:#F78C6C;">          1.1</span><span style="color:#C3E88D;">.4</span></span>
<span class="line"><span style="color:#FFCB6B;">  GitCommit:</span><span style="color:#C3E88D;">        v1.1.4-0-g5fd4c4d</span></span>
<span class="line"><span style="color:#FFCB6B;"> docker-init:</span></span>
<span class="line"><span style="color:#FFCB6B;">  Version:</span><span style="color:#F78C6C;">          0.19</span><span style="color:#C3E88D;">.0</span></span>
<span class="line"><span style="color:#FFCB6B;">  GitCommit:</span><span style="color:#C3E88D;">        de40ad0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><ol start="6"><li>运行<code>hello-world</code>镜像</li></ol><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> run hello-world</span></span>
<span class="line"><span style="color:#FFCB6B;">Unable</span><span style="color:#C3E88D;"> to find image </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello-world:latest</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> locally</span></span>
<span class="line"><span style="color:#FFCB6B;">latest:</span><span style="color:#C3E88D;"> Pulling from library/hello-world</span></span>
<span class="line"><span style="color:#FFCB6B;">93288797bd35:</span><span style="color:#C3E88D;"> Pull complete</span></span>
<span class="line"><span style="color:#FFCB6B;">Digest:</span><span style="color:#C3E88D;"> sha256:2498fce14358aa50ead0cc6c19990fc6ff866ce72aeb5546e1d59caac3d0d60f</span></span>
<span class="line"><span style="color:#FFCB6B;">Status:</span><span style="color:#C3E88D;"> Downloaded newer image for hello-world:latest</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Hello</span><span style="color:#C3E88D;"> from Docker!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>以上运行<code>hello-world</code>镜像时需要先从远程仓库下载镜像到本地，然后才可以运行，由于docker的官方仓库在国外，对于国内用户访问比较慢，因此需要配置一些国内镜像加速地址，才会加快下载速度</p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>配置<code>vim /etc/docker/daemon.json</code>没有此文件的可以自行创建json文件</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">registry-mirrors</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  	// aliyun</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">https://xxxxxx.mirror.aliyuncs.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 网易</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">https://hub-mirror.c.163.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 腾讯</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">https://mirror.ccs.tencentyun.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 国内docker</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">https://registry.docker-cn.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 科大</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">https://docker.mirrors.ustc.edu.cn</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>更多配置参考👉<a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon" target="_blank" rel="noreferrer">官方文档</a></p><p>修改了配置文件后需要重启服务：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#C3E88D;"> daemon-reload</span></span>
<span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#C3E88D;"> restart docker</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,38);function i(y,d,b,u,m,F){const a=n("Reward"),l=n("Gitalk");return r(),p("div",null,[t,s(a),s(l)])}const B=e(c,[["render",i]]);export{D as __pageData,B as default};
